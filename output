{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Sigma (en US)",
          "name": "Sigma",
          "informationUri": "https://get.sigma.io",
          "rules": [
            {
              "id": "access_control_disabled_consul",
              "name": "Sigma Checker access_control_disabled_consul",
              "shortDescription": {
                "text": "Consul access control disabled"
              },
              "fullDescription": {
                "text": "The Consul authorization checks defined in the ACL are disabled.\n"
              },
              "help": {
                "text": "Enable the Consul ACL protections by setting the `acl.enabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "access_control_disabled_openapi",
              "name": "Sigma Checker access_control_disabled_openapi",
              "shortDescription": {
                "text": "Authentication disabled for operation"
              },
              "fullDescription": {
                "text": "Global security schemes have been explicitly disabled for this operation allowing unauthenticated requests to be accepted.\n"
              },
              "help": {
                "text": "Audit the configuration of operation-level security controls. Global security controls are applied by removing the empty security field from the operation."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "access_control_disabled_openapi_x_amazon_apigateway",
              "name": "Sigma Checker access_control_disabled_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "Authentication disabled for Amazon API Gateway"
              },
              "fullDescription": {
                "text": "The Amazon API Gateway authentication is configured for open access. Disabling AWS IAM controls may allow unauthorized access to sensitive resources.\n"
              },
              "help": {
                "text": "The authorization type should not be `NONE`, for example use `AWS_IAM` to use IAM permissions."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "access_control_disabled_openapi_x_google",
              "name": "Sigma Checker access_control_disabled_openapi_x_google",
              "shortDescription": {
                "text": "Authentication disabled in Google extension"
              },
              "fullDescription": {
                "text": "The Google extension for text indicates that any unconfigured calls will pass through Google's ESP without any authentication checks. This allows an unauthenticated attacker to call vulnerable API operations directly, compromising server-side data and resources.\n"
              },
              "help": {
                "text": "The OpenAPI file should have the field value set to `configured`  (which is the default value if unspecified). The value `configured` means that only the API methods listed in the OpenAPI spec file are served through ESP."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "access_control_disabled_openapi_x_google_backend",
              "name": "Sigma Checker access_control_disabled_openapi_x_google_backend",
              "shortDescription": {
                "text": "Authentication disabled for Google backend service"
              },
              "fullDescription": {
                "text": "The Google extension for text indicates that Google's Extensible Service Proxy (ESP) will make unauthenticated requests to the backend service, bypassing Google's Identity Aware Proxy (IAP) and Identity and Access Management (IAM) controls. Google backend services will accept anonymous requests, if no other compensating control is in place, allowing an attacker to call services directly, compromising sensitive data and operations.\n"
              },
              "help": {
                "text": "Re-enable ESP backend authentication by removing the `disable_auth` property or by setting the value to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "access_control_disabled_openapi_x_wso2",
              "name": "Sigma Checker access_control_disabled_openapi_x_wso2",
              "shortDescription": {
                "text": "Authentication disabled for WSO2 API Microgateway"
              },
              "fullDescription": {
                "text": "The default OAuth2 protections for the WSO2 API Microgateway have been disabled, allowing unauthorized access to API operations.\n"
              },
              "help": {
                "text": "Re-enable WSO2 protections by removing the `x-wso2-disable-security` property or by setting the value to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "access_control_disabled_zookeeper",
              "name": "Sigma Checker access_control_disabled_zookeeper",
              "shortDescription": {
                "text": "ZooKeeper Authorization Checks Disabled"
              },
              "fullDescription": {
                "text": "The ZooKeeper `skipAcl` option is set to `yes`, disabling authorization checks and granting users access to all data.\n"
              },
              "help": {
                "text": "Remove the `skipAcl` option, or explicitly set the value to `no`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "admin_access_enabled_spring_boot",
              "name": "Sigma Checker admin_access_enabled_spring_boot",
              "shortDescription": {
                "text": "Spring Boot admin access enabled"
              },
              "fullDescription": {
                "text": "The admin features of the Spring application are enabled. Exposing an application through a remote JMX endpoint makes it vulnerable. The attackers might be able to manage the application remotely, including shutting down the application. This access is based on the configuration of the MBeanServer, which might not require authentication or have weak credentials.\n"
              },
              "help": {
                "text": "Disable the admin features of the Spring application by setting `spring.application.admin.enabled` to `false` or omit it as the default value is `false`"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "admin_dashboard_publicly_accessible_kubernetes",
              "name": "Sigma Checker admin_dashboard_publicly_accessible_kubernetes",
              "shortDescription": {
                "text": "Kubernetes Dashboard exposed"
              },
              "fullDescription": {
                "text": "The Kubernetes Dashboard is exposed via the load balancer, making it publicly accessible.\n"
              },
              "help": {
                "text": "Disable the Kubernetes Dashboard or set the `spec.type` to a value other than `LoadBalancer`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "allow_all_authz_policy_istio",
              "name": "Sigma Checker allow_all_authz_policy_istio",
              "shortDescription": {
                "text": "Istio Allow-All Authorization Policy"
              },
              "fullDescription": {
                "text": "The Istio authorization policy has a `Rules[]` array that contains a single empty rule, allowing all requests to workloads in the namespace.\n"
              },
              "help": {
                "text": "Remove the empty rule to change the policy to deny-all, or implement a policy that only allows requests from authorized clients.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "allow_all_authz_policy_terraform_aws_ecr",
              "name": "Sigma Checker allow_all_authz_policy_terraform_aws_ecr",
              "shortDescription": {
                "text": "AWS ECR allow-all policy"
              },
              "fullDescription": {
                "text": "The AWS ECR repository has an allow-all policy that publicly exposes Docker images.\n"
              },
              "help": {
                "text": "Modify the policy to only grant access to appropriate users by setting the `policy.Statement.Principal` to a value that is not the wildcard `*`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "allow_all_authz_policy_terraform_google_big_query",
              "name": "Sigma Checker allow_all_authz_policy_terraform_google_big_query",
              "shortDescription": {
                "text": "Open Access to Google Dataset"
              },
              "fullDescription": {
                "text": "The Google BigQuery Dataset grants access to either the `allAuthenticatedUsers` or `allUsers` groups, which makes the dataset available to all Google users or all public users respectively.\n"
              },
              "help": {
                "text": "Set the `access.special_group` field to a value other than `allAuthenticatedUsers` or `allUsers` to restrict access to the dataset."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "allow_all_authz_policy_terraform_google_storage_bucket",
              "name": "Sigma Checker allow_all_authz_policy_terraform_google_storage_bucket",
              "shortDescription": {
                "text": "Open Access to Google Storage"
              },
              "fullDescription": {
                "text": "The Google Storage Bucket grants access to either the `allAuthenticatedUsers` or `allUsers` groups, which makes the data available to all Google users or all public users respectively.\n"
              },
              "help": {
                "text": "Remove `allAuthenticatedUsers` and `allUsers` from the `resource.members` field to restrict access to the Google Storage Bucket."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "anonymous_access_enabled_kubernetes",
              "name": "Sigma Checker anonymous_access_enabled_kubernetes",
              "shortDescription": {
                "text": "Container allows anonymous authentication"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration does not disable anonymous authentication to the container.\n"
              },
              "help": {
                "text": "Set the `enabled` attribute of the `authentication anonymous` elements to `false`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "anonymous_access_enabled_rabbitmq_local",
              "name": "Sigma Checker anonymous_access_enabled_rabbitmq_local",
              "shortDescription": {
                "text": "RabbitMQ Allows Anonymous Local Connections"
              },
              "fullDescription": {
                "text": "The RabbitMQ MQTT configuration allows anonymous connections from `localhost`. These connections will use the default `guest` account.\n"
              },
              "help": {
                "text": "Disable anonymous connections by explicitly setting the `mqtt.allow_anonymous` option to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "anonymous_access_enabled_rabbitmq_remote",
              "name": "Sigma Checker anonymous_access_enabled_rabbitmq_remote",
              "shortDescription": {
                "text": "RabbitMQ Allows Anonymous Remote Connections"
              },
              "fullDescription": {
                "text": "The RabbitMQ MQTT configuration allows anonymous connections from remote clients.\n"
              },
              "help": {
                "text": "Disable anonymous connections by explicitly setting the `mqtt.allow_anonymous` option to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "api_exposes_refresh_token_cloudformation_alexa",
              "name": "Sigma Checker api_exposes_refresh_token_cloudformation_alexa",
              "shortDescription": {
                "text": "Alexa skill exposes sensitive refresh token"
              },
              "fullDescription": {
                "text": "The Alexa skill is linked to the sensitive AWS Secrets Manager or AWS Systems Manager services and is configured with a refresh token for these services. These refresh tokens can be retrieved via the Alexa Skills Kit CLI, leaking them to unauthorized users.\n"
              },
              "help": {
                "text": "Modify the Alexa skill (specifically the `Properties.AuthenticationConfiguration.RefreshToken` field) so that it does not expose sensitive refresh tokens (i.e. those that begin with `{{resolve:secretsmanager:` or `{{resolve:ssm-secure:`)."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "api_key_auth_enabled_openapi_v2",
              "name": "Sigma Checker api_key_auth_enabled_openapi_v2",
              "shortDescription": {
                "text": "API supports API key security scheme"
              },
              "fullDescription": {
                "text": "The API-Key security scheme indicates the use of a static API key rather than an expiring token. Unlike access tokens, a stolen API key may be used indefinitely until it is revoked or regenerated by the API owner.\n"
              },
              "help": {
                "text": "Modify the API to use OAuth2 access tokens instead of API key authentication by configuring the security scheme to use `type: oauth2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "api_key_auth_enabled_openapi_v3",
              "name": "Sigma Checker api_key_auth_enabled_openapi_v3",
              "shortDescription": {
                "text": "API supports API key security scheme"
              },
              "fullDescription": {
                "text": "The API-Key security scheme indicates the use of a static API key rather than an expiring token. Unlike access tokens, a stolen API key may be used indefinitely until it is revoked or regenerated by the API owner.\n"
              },
              "help": {
                "text": "Modify the API to use OAuth2 access tokens instead of API key authentication by configuring the security scheme to use `type: oauth2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "api_key_in_query_string_openapi",
              "name": "Sigma Checker api_key_in_query_string_openapi",
              "shortDescription": {
                "text": "Sensitive data in URI"
              },
              "fullDescription": {
                "text": "The API operation accepts the API key as a query string parameter. The API key is then transmitted in the query string which may leak it to an attacker through proxy logs, browser history, or other means.\n"
              },
              "help": {
                "text": "Modify the API key security scheme to only accept the API key in the HTTP headers or request body. In the OpenAPI spec file this is configured by changing the security scheme's `in` field to one of the following: `header`, `body`, `formData`, `cookie`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "api_test_checker",
              "name": "Sigma Checker api_test_checker",
              "shortDescription": {
                "text": "Test API checker"
              },
              "fullDescription": {
                "text": "A checker to test the API checker infrastructure\n"
              },
              "help": {
                "text": "None"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "apparmour_default_configuration_override_kubernetes",
              "name": "Sigma Checker apparmour_default_configuration_override_kubernetes",
              "shortDescription": {
                "text": "AppArmor configuration override"
              },
              "fullDescription": {
                "text": "The Kubernetes container's default AppArmor configuration has been loosened via the `container.apparmor.security.beta.kubernetes.io` annotation.\n"
              },
              "help": {
                "text": "Remove the `container.apparmor.security.beta.kubernetes.io` annotation or explicitly set the value to `runtime/default`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "automatic_key_rotation_disabled_cloudformation_aws_kms",
              "name": "Sigma Checker automatic_key_rotation_disabled_cloudformation_aws_kms",
              "shortDescription": {
                "text": "Amazon KMS key rotation disabled"
              },
              "fullDescription": {
                "text": "The AWS Key Management Service (KMS) has automatic key rotation disabled. Note that automatic key rotation only applies to symmetric customer master keys (CMKs).\n"
              },
              "help": {
                "text": "Enable automatic key rotation by explicitly setting the `Properties.EnableKeyRotation` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "backups_allowed_android",
              "name": "Sigma Checker backups_allowed_android",
              "shortDescription": {
                "text": "Android application allows backups"
              },
              "fullDescription": {
                "text": "The Android application is configured to allow data backups up via adb tools or similar. By accessing backup files, an attacker might view or modify application data without having root access to the device. An attacker can use this approach to backup, modify, and then restore application data to bypass local security controls.\n"
              },
              "help": {
                "text": "Set the `android:allowBackup` attribute of the `<application>` element to `false` in the application's `AndroidManifest.xml`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_cloudformation_aws_amplify",
              "name": "Sigma Checker basic_auth_enabled_cloudformation_aws_amplify",
              "shortDescription": {
                "text": "AWS Amplify App with Basic Auth"
              },
              "fullDescription": {
                "text": "The AWS Amplify App is configured to use the Basic Authentication scheme. This exposes the  user's credentials in the request and prevents credential rotation via short-lived tokens.\n"
              },
              "help": {
                "text": "Disable Basic Authentication by removing the `Properties.BasicAuthConfig` object  or by setting the `Properties.BasicAuthConfig.EnableBasicAuth` field to `false`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_kubernetes",
              "name": "Sigma Checker basic_auth_enabled_kubernetes",
              "shortDescription": {
                "text": "Container allows basic authentication"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration does not disable basic authentication to the container.\n"
              },
              "help": {
                "text": "Avoid using the `basic-auth-file` element."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_openapi_v2",
              "name": "Sigma Checker basic_auth_enabled_openapi_v2",
              "shortDescription": {
                "text": "API supports basic authentication"
              },
              "fullDescription": {
                "text": "The API uses the basic authentication scheme which exposes user credentials in the HTTP header and prevents token rotation.\n"
              },
              "help": {
                "text": "Modify the API to use OAuth2 access tokens instead of Basic authentication by configuring the security scheme to use `type: oauth2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_openapi_v3",
              "name": "Sigma Checker basic_auth_enabled_openapi_v3",
              "shortDescription": {
                "text": "API supports basic authentication"
              },
              "fullDescription": {
                "text": "The API uses the basic authentication scheme which exposes user credentials in the HTTP header and prevents token rotation.\n"
              },
              "help": {
                "text": "Modify the API to use OAuth2 access tokens instead of `basic` authentication by configuring the security scheme to use `type: oauth2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_postman",
              "name": "Sigma Checker basic_auth_enabled_postman",
              "shortDescription": {
                "text": "API Endpoint Uses Basic Authentication Scheme"
              },
              "fullDescription": {
                "text": "The Postman request references an API endpoint that uses the Basic Authorization scheme, exposing user credentials and preventing adequate token rotation.\n"
              },
              "help": {
                "text": "Configure the API endpoint to use a more secure scheme with short-lived tokens that do not contain sensitive user data.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_terraform_azurerm_vm",
              "name": "Sigma Checker basic_auth_enabled_terraform_azurerm_vm",
              "shortDescription": {
                "text": "Azure basic authentication is allowed"
              },
              "fullDescription": {
                "text": "The Terraform configuration allows basic authentication to Azure virtual machines.\n"
              },
              "help": {
                "text": "Set the `disable_password_authentication` attribute of the `resource\\azurerm_virtual_machine` elements to `true` in the Terraform configuration files."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "basic_auth_enabled_terraform_gke",
              "name": "Sigma Checker basic_auth_enabled_terraform_gke",
              "shortDescription": {
                "text": "Unsafe Basic Authentication"
              },
              "fullDescription": {
                "text": "The GKE cluster supports the Basic Authentication scheme, indicated by a `master_auth` object with a `username` and `password` value. This exposes the client's plain-text credentials in the request object and prevents adequate token rotation. Additionally, the credentials can be retrieved by any user with the `container.clusters.getCredentials` permission.\n"
              },
              "help": {
                "text": "Disable support for Basic Authentication by removing the `master_auth` object. This will force all clients to authenticate using the GKE cluster's default OAuth2 scheme."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cache_ttl_too_long_openapi_x_a127",
              "name": "Sigma Checker cache_ttl_too_long_openapi_x_a127",
              "shortDescription": {
                "text": "OAuth2 token cached for excessive duration"
              },
              "fullDescription": {
                "text": "The Apigee text integration cache stores OAuth2 tokens for more than `60` minutes. Excessive access token duration increases the timeframe for which an attacker may use a compromised token. Relying on cached tokens may override expiration mechanisms built into the token or authorization server.\n"
              },
              "help": {
                "text": "Configure the OAuth2 token cache to purge tokens after `60` minutes or less. This is configured with an `x-a127-services.oauth2` cache provider object with a `ttl` value no greater than `3600000`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_consul",
              "name": "Sigma Checker certificate_verification_disabled_consul",
              "shortDescription": {
                "text": "Consul hostname verification disabled"
              },
              "fullDescription": {
                "text": "Hostname verification is disabled on the Consul agent, allowing it to accept arbitrary TLS certificates. From the Consul documentation, \"This setting is critical to prevent a compromised client from being restarted as a server and having all cluster state including all ACL tokens and Connect CA root keys replicated to it.\"\n"
              },
              "help": {
                "text": "Enable hostname verification by explicitly setting the `verify_server_hostname` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "certificate_verification_disabled_core_java",
              "name": "Sigma Checker certificate_verification_disabled_core_java",
              "shortDescription": {
                "text": "Certificate revocation check disabled"
              },
              "fullDescription": {
                "text": "Disabling checks for certificate revocation results in a failure to properly authenticate its SSL/TLS peer, thereby allowing a client to connect to this system with a revoked certificate.\n"
              },
              "help": {
                "text": "Do not disable certificate revocation checks by calling `PKIXParameters.setRevocationEnabled`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "certificate_verification_disabled_grails_springsecurity",
              "name": "Sigma Checker certificate_verification_disabled_grails_springsecurity",
              "shortDescription": {
                "text": "Failed authentication not dropped"
              },
              "fullDescription": {
                "text": "A failed certificate-based authentication should be dropped as soon as possible.\n"
              },
              "help": {
                "text": "Make sure `continueFilterChainOnUnsuccessfulAuthentication` is set to `false`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "certificate_verification_disabled_kubernetes",
              "name": "Sigma Checker certificate_verification_disabled_kubernetes",
              "shortDescription": {
                "text": "TLS verification is disabled"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration explicitly disable TLS certificate verification.\n"
              },
              "help": {
                "text": "Remove the `--insecure-skip-tls-verify` in the container `spec`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_node_https",
              "name": "Sigma Checker certificate_verification_disabled_node_https",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "The application disables certificate validation which leads to a rogue certificate not being rejected when its signature cannot be verified by any of the certificate authorities. This allows for an insecure connection and a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_node_request_reject_unauthorized",
              "name": "Sigma Checker certificate_verification_disabled_node_request_reject_unauthorized",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "The application disables certificate validation which leads to a rogue certificate not being rejected when its signature cannot be verified by any of the certificate authorities. This allows for an insecure connection and a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "certificate_verification_disabled_node_request_strict_ssl",
              "name": "Sigma Checker certificate_verification_disabled_node_request_strict_ssl",
              "shortDescription": {
                "text": "SSL Certificate Verification Disabled in Request"
              },
              "fullDescription": {
                "text": "The `request` module establishes a connection over SSL, but does not validate the SSL certificate. The `strictSSL` setting is set to `false`, and therefore, a rogue certificate will be trusted. This may lead to man-in-the-middle attacks and sensitive data leaks when resources are requested.\n"
              },
              "help": {
                "text": "To protect HTTP requests ensure that SSL certificates are always validated by setting the `strictSSL` option to `true` or omitting this property altogether, since the default is secure.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "certificate_verification_disabled_node_restify",
              "name": "Sigma Checker certificate_verification_disabled_node_restify",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "The application disables certificate validation. This leads to a rogue certificate not being rejected when its signature cannot be verified by any of the certificate authorities, resulting in an insecure connection and a man-in-the-middle attack\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "certificate_verification_disabled_node_tls",
              "name": "Sigma Checker certificate_verification_disabled_node_tls",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "The application disables certificate validation which leads to a rogue certificate not being rejected when its signature cannot be verified by any of the certificate authorities. This allows for an insecure connection and a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_node_ws",
              "name": "Sigma Checker certificate_verification_disabled_node_ws",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "The application disables certificate validation which leads to a rogue certificate not being rejected when its signature cannot be verified by any of the certificate authorities. This allows for an insecure connection and a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker certificate_verification_disabled_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "Certificate verification is skipped"
              },
              "fullDescription": {
                "text": "Skipping certificate verification allows self-signed certificates which may allow an attacker to spoof a trusted entity by launching a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set the `insecureSkipVerification` to `false`"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "certificate_verification_disabled_socket_io",
              "name": "Sigma Checker certificate_verification_disabled_socket_io",
              "shortDescription": {
                "text": "SSL certificate validation disabled"
              },
              "fullDescription": {
                "text": "Certificate validation is disabled, which means that any certificate, including rogue certificates, will be accepted even if its signature cannot be verified by any certificate authority. Accepting certificates in this manner can open the application up to a man-in-the-middle attack.\n"
              },
              "help": {
                "text": "Set `rejectUnauthorized` attribute to `true` to enable certificate validation.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "client_store_info_leak_apollo_graphql_react",
              "name": "Sigma Checker client_store_info_leak_apollo_graphql_react",
              "shortDescription": {
                "text": "Apollo GraphQL Client Store Information Leakage (ReactJS)"
              },
              "fullDescription": {
                "text": "The Apollo GraphQL client caches query data client side, and the cached data is not cleared on logout via `ApolloClient.resetStore()` or `ApolloClient.clearStore()`. An attacker with physical access to the client system can inspect the cache to view the prior user's query data.\n"
              },
              "help": {
                "text": "Modify the client-side logout handler to clear the Apollo cache via `ApolloClient.resetStore()` or `ApolloClient.clearStore()`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cloud_gateway_publicly_accessible_cloudformation_aws_apigateway",
              "name": "Sigma Checker cloud_gateway_publicly_accessible_cloudformation_aws_apigateway",
              "shortDescription": {
                "text": "API Gateway publicly accessible"
              },
              "fullDescription": {
                "text": "The Amazon ApiGateway is publicly accessible, exposing downstream resources to the external network.\n"
              },
              "help": {
                "text": "Configure the `EndpointConfiguration.Types` list to contain only the type `PRIVATE`. This will restrict public access and only allow API requests originating from the organization's Amazon Virtual Private Cloud (VPC).\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_cloudformation_aws_ec2_subnet",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_cloudformation_aws_ec2_subnet",
              "shortDescription": {
                "text": "Subnet automatically assigns public IP to EC2 instances"
              },
              "fullDescription": {
                "text": "The AWS EC2 subnet is configured to automatically assign a public IP to all EC2 instances on launch, exposing them to the public internet.\n"
              },
              "help": {
                "text": "Remove the `Properties.MapPublicIpOnLaunch` field or explicitly set the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_cloudformation_aws_rds",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_cloudformation_aws_rds",
              "shortDescription": {
                "text": "Amazon RDS DB instance with public IP"
              },
              "fullDescription": {
                "text": "The Amazon Relational Database Service (RDS) initializes a database instance with a public IP, exposing it to the public internet.\n"
              },
              "help": {
                "text": "Set the `Properties.PubliclyAccessible` field to `false` to prevent the service from assigning a public IP to the database instance.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_cloudformation_sagemaker_notebook",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_cloudformation_sagemaker_notebook",
              "shortDescription": {
                "text": "SageMaker Notebook with public IP"
              },
              "fullDescription": {
                "text": "The SageMaker Notebook is initialized with a public IP, exposing it to the public internet.\n"
              },
              "help": {
                "text": "Explicitly set the `Properties.DirectInternetAccess` field to `Disabled` to only allow access from the VPC subnet.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_terraform_aws_ec2",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_terraform_aws_ec2",
              "shortDescription": {
                "text": "AWS EC2 with public IP"
              },
              "fullDescription": {
                "text": "The AWS EC2 instance is bound to a public IP address, exposing the service to the external network and bypassing any upstream access controls.\n"
              },
              "help": {
                "text": "Modify the AWS EC2 configuration to remove the `associate_public_ip_address` field or explicitly set it to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_terraform_aws_eks",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_terraform_aws_eks",
              "shortDescription": {
                "text": "AWS EKS API server exposed"
              },
              "fullDescription": {
                "text": "The AWS EKS public API server is exposed, allowing external access to the resource.\n"
              },
              "help": {
                "text": "Disable the public API server by removing the `vpc_config.endpoint_public_access` field or explicitly setting it to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_terraform_aws_mq_broker",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_terraform_aws_mq_broker",
              "shortDescription": {
                "text": "AWS MQ broker exposed"
              },
              "fullDescription": {
                "text": "The AWS MQ broker is exposed to the external network.\n"
              },
              "help": {
                "text": "Modify the AWS MQ broker configuration to remove the `publicly_accessible` field or explicitly set the value to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_terraform_aws_rds",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_terraform_aws_rds",
              "shortDescription": {
                "text": "AWS database exposed"
              },
              "fullDescription": {
                "text": "The Amazon Relational Database Service (AWS RDS) is exposed to the external network.\n"
              },
              "help": {
                "text": "Modify the AWS RDS configuration to remove the `publicly_accessible` field or explicitly set the value to `false`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_resource_assigned_public_ip_terraform_google_compute",
              "name": "Sigma Checker cloud_resource_assigned_public_ip_terraform_google_compute",
              "shortDescription": {
                "text": "Google Compute public IP"
              },
              "fullDescription": {
                "text": "The Google Compute instance is bound to a public IP address, exposing the service to the external network and bypassing any upstream access controls.\n"
              },
              "help": {
                "text": "Modify the Google Compute instance to remove the `access_config` block from the `network_interface` configuration. Note that the `access_config` block must be removed completely, as an empty `access_config` block will cause an external IP to be automatically generated."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_service_authn_disabled_terraform_azurerm_app_service",
              "name": "Sigma Checker cloud_service_authn_disabled_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Azure App Service authentication is disabled"
              },
              "fullDescription": {
                "text": "The Terraform configuration does not enable authentication for the `azurerm_app_service` resource.\n"
              },
              "help": {
                "text": "Set the `auth_settings.enabled` attribute of the `resource\\azurerm_app_service` elements to `true` in the Terraform configuration files."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cloud_service_authz_disabled_cloudformation_aws_apigateway",
              "name": "Sigma Checker cloud_service_authz_disabled_cloudformation_aws_apigateway",
              "shortDescription": {
                "text": "AWS API Gateway Open Access"
              },
              "fullDescription": {
                "text": "The AWS API Gateway has an `AuthorizationType` with the value `None` which grants anonymous access to downstream resources.\n"
              },
              "help": {
                "text": "Change the `authorizationType` to `AWS_IAM`, `CUSTOM`, or `COGNITO_USER_POOLS`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "cloud_storage_allows_public_config_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker cloud_storage_allows_public_config_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket Allows Public Config"
              },
              "fullDescription": {
                "text": "The AWS S3 Bucket does not explicitly block all public access configurations via the `PublicAccessBlockConfiguration` field. As a result, an S3 Bucket might be publicly exposed via an insecure public ACL or IAM policy.\n"
              },
              "help": {
                "text": "Explicitly set the following `PublicAccessBlockConfiguration` fields to `true`: `BlockPublicAcls`, `BlockPublicPolicy`, `IgnorePublicAcls`, `RestrictPublicBuckets`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cloud_storage_allows_public_config_terraform_aws_s3_bucket",
              "name": "Sigma Checker cloud_storage_allows_public_config_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 bucket weak access policy"
              },
              "fullDescription": {
                "text": "The AWS S3 bucket access block configuration allows public access.\n"
              },
              "help": {
                "text": "Modify the AWS S3 bucket access block configuration so that `block_public_policy`, `block_public_acls`, `ignore_public_acls`, and `restrict_public_buckets` are explicitly set to `true`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cloud_storage_default_allow_all_terraform_azurerm_storage_account",
              "name": "Sigma Checker cloud_storage_default_allow_all_terraform_azurerm_storage_account",
              "shortDescription": {
                "text": "Azure Storage allow-all rule"
              },
              "fullDescription": {
                "text": "The Azure Storage account has a default allow-all network access rule.\n"
              },
              "help": {
                "text": "Modify the Azure Storage network rule so that the `default-action` field is set to `Deny`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cloud_storage_encryption_disabled_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker cloud_storage_encryption_disabled_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "Amazon S3 Bucket encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon S3 Bucket does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable S3 Bucket encryption by explicitly configuring the `Properties.BucketEncryption.ServerSideEncryptionConfiguration` field as a non-empty list.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cloud_storage_encryption_disabled_terraform_google_storage_bucket",
              "name": "Sigma Checker cloud_storage_encryption_disabled_terraform_google_storage_bucket",
              "shortDescription": {
                "text": "Missing Google Storage Bucket encryption"
              },
              "fullDescription": {
                "text": "The Google Storage Bucket has encryption disabled exposing data at rest.\n"
              },
              "help": {
                "text": "Enable encryption for the Google Storage Bucket by configuring the `encryption.default_kms_key_name` argument."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cloud_storage_publicly_accessible_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker cloud_storage_publicly_accessible_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket Open Access"
              },
              "fullDescription": {
                "text": "The AWS S3 Bucket is configured to grant read, write, or read-write access to either all public users or all AWS-authenticated users.\n"
              },
              "help": {
                "text": "Modify the `Properties.AccessControl` field so that it is not set to the values `PublicRead`,  `PublicReadWrite`, or `AuthenticatedRead`. Acceptable values include the following: `Private`,  `LogDeliveryWrite`, `BucketOwnerRead`, `BucketOwnerFullControl`, or `AwsExecRead`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "config_browser_plugin_enabled_struts2",
              "name": "Sigma Checker config_browser_plugin_enabled_struts2",
              "shortDescription": {
                "text": "Struts2 config-browser plugin"
              },
              "fullDescription": {
                "text": "The application uses the `struts2-config-browser-plugin` dependency. This plugin discloses Action mappings and configuration information to any user.\n"
              },
              "help": {
                "text": "Remove `struts2-config-browser-plugin` from the application dependencies.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "conflicting_names_servlet",
              "name": "Sigma Checker conflicting_names_servlet",
              "shortDescription": {
                "text": "Duplicate servlet name"
              },
              "fullDescription": {
                "text": "A Servlet name is reused, so only last servlet with this name will be deployed.\n"
              },
              "help": {
                "text": "Ensure that the Servlet names do not conflict. They should all have a unique value.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_access_to_host_filesystem_kubernetes",
              "name": "Sigma Checker container_access_to_host_filesystem_kubernetes",
              "shortDescription": {
                "text": "Container with access to host filesystem"
              },
              "fullDescription": {
                "text": "The Kubernetes container has been granted access to the host filesystem, which can facilitate vertical privilege escalation if the container is compromised.\n"
              },
              "help": {
                "text": "Remove the `hostPath` field from the container specification."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_empty_security_context_kubernetes",
              "name": "Sigma Checker container_empty_security_context_kubernetes",
              "shortDescription": {
                "text": "Container security context disabled"
              },
              "fullDescription": {
                "text": "The Kubernetes container is configured with a disabled security context, which generates an insecure default configuration.\n"
              },
              "help": {
                "text": "Explicitly define the `securityContext` field to enable built-in protections and limit container permissions."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_filesystem_write_kubernetes",
              "name": "Sigma Checker container_filesystem_write_kubernetes",
              "shortDescription": {
                "text": "Container allows filesystem write"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration does not disable writing to the container filesystem.\n"
              },
              "help": {
                "text": "Use the `readOnlyRootFilesystem` spec property to disable write access to the container filesystem."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_hostport_binding_kubernetes",
              "name": "Sigma Checker container_hostport_binding_kubernetes",
              "shortDescription": {
                "text": "Container hostPort binding"
              },
              "fullDescription": {
                "text": "The `hostPort` feature exposes a single container port on the host IP, allowing direct access to the container service and bypassing upstream access controls.\n"
              },
              "help": {
                "text": "Remove the `hostPort` field or set the value to `0`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "container_insecure_bind_address_kubernetes",
              "name": "Sigma Checker container_insecure_bind_address_kubernetes",
              "shortDescription": {
                "text": "Container with insecure address binding"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration makes use of the `insecure-bind-address` element and does not set it to a localhost address.\n"
              },
              "help": {
                "text": "Avoid using the `insecure-bind-address` or set its value to a locahost address."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_missing_cpu_limit_kubernetes",
              "name": "Sigma Checker container_missing_cpu_limit_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container missing CPU limit"
              },
              "fullDescription": {
                "text": "The Kubernetes container does not have a set CPU limit, allowing it to exhaust all CPU resources or cause execessive cloud usage bills.\n"
              },
              "help": {
                "text": "Each container defined in either the `containers` or `initContainers` blocks should have a `resources.limits.cpu` field to restrict CPU usage. Note that unlike the `requests.cpu` field that set the initial CPU allocated for a container, `limits.cpu` sets a hard limit for the maximum CPU that can be consumed by the container.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_missing_memory_limit_kubernetes",
              "name": "Sigma Checker container_missing_memory_limit_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container missing memory limit"
              },
              "fullDescription": {
                "text": "The Kubernetes container does not have a set memory limit, allowing it to exhaust all memory resources or cause execessive cloud usage bills.\n"
              },
              "help": {
                "text": "Each container defined in either the `containers` or `initContainers` blocks should have a `resources.limits.memory` field to restrict memory usage. Note that unlike the `requests.memory` field that sets the initial memory allocated for a container, `limits.memory` sets a hard limit for the maximum amount of memory that can be consumed by the container.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_privilege_escalation_allowed_kubernetes",
              "name": "Sigma Checker container_privilege_escalation_allowed_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container privilege escalation allowed"
              },
              "fullDescription": {
                "text": "The Kubernetes container allows privilege escalation, meaning a user can set the security context of the container and can perform root-level operations.\n"
              },
              "help": {
                "text": "Disable container privilege escalation by explicitly setting `allowPrivilegeEscalation` to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "container_requesting_additional_capabilities_kubernetes",
              "name": "Sigma Checker container_requesting_additional_capabilities_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container requests additional capabilities"
              },
              "fullDescription": {
                "text": "The Kubernetes container requests additional capabilities beyond the default set, potentially resulting in privilege escalation vulnerabilities.\n"
              },
              "help": {
                "text": "Restrict the container to the default set of privileges by removing the `securityContext.capabilities.add` field.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "container_requesting_net_raw_kubernetes",
              "name": "Sigma Checker container_requesting_net_raw_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container requests NET_RAW capability"
              },
              "fullDescription": {
                "text": "The Kubernetes container requests the NET_RAW capability, granting access to the host's network interfaces.\n"
              },
              "help": {
                "text": "Remove the NET_RAW capability from the list of capabilities.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "container_requesting_sys_admin_kubernetes",
              "name": "Sigma Checker container_requesting_sys_admin_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container requests SYS_ADMIN capability"
              },
              "fullDescription": {
                "text": "The Kubernetes container requests the SYS_ADMIN capability, granting root-level permissions.\n"
              },
              "help": {
                "text": "Remove the SYS_ADMIN capability from the list of capabilities.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "container_running_as_root_kubernetes",
              "name": "Sigma Checker container_running_as_root_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container running as root"
              },
              "fullDescription": {
                "text": "The Kubernetes container is allowed to run as the root user.\n"
              },
              "help": {
                "text": "Explicitly set the `securityContext.runAsNonRoot` value to `true` to prevent the container from running as a root-level user.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "container_sharing_host_ipc_namespace_kubernetes",
              "name": "Sigma Checker container_sharing_host_ipc_namespace_kubernetes",
              "shortDescription": {
                "text": "Container shares host IPC namespace"
              },
              "fullDescription": {
                "text": "The Kubernetes container uses the host IPC namespace, allowing it to interact with processes running outside the container.\n"
              },
              "help": {
                "text": "Remove the `spec.hostIPC` field, or explicitly set the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "container_sharing_host_network_namespace_kubernetes",
              "name": "Sigma Checker container_sharing_host_network_namespace_kubernetes",
              "shortDescription": {
                "text": "Container shares host network namespace"
              },
              "fullDescription": {
                "text": "The Kubernetes container uses the host network namespace, giving it full access to the host's network interfaces.\n"
              },
              "help": {
                "text": "Restrict the container to the private network by removing the `spec.hostNetwork` field, or explicitly setting the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "container_sharing_host_pid_namespace_kubernetes",
              "name": "Sigma Checker container_sharing_host_pid_namespace_kubernetes",
              "shortDescription": {
                "text": "Container shares host PID namespace"
              },
              "fullDescription": {
                "text": "The Kubernetes container uses the host PID namespace, allowing it access to processes running on the host.\n"
              },
              "help": {
                "text": "Isolate container and host processes by removing the `spec.hostPID` field, or explicitly set the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cookie_logging_enabled_spring_boot",
              "name": "Sigma Checker cookie_logging_enabled_spring_boot",
              "shortDescription": {
                "text": "Spring Boot logging request cookies"
              },
              "fullDescription": {
                "text": "The Spring Boot is configured to log request cookies. Storing sensitive information in log files may lead to financial loss or reputation damage and assist attackers in gaining access to systems via information exposure.\n"
              },
              "help": {
                "text": "Set the `log-cookies` property to `false` or omit it as the default value is `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cookie_session_signing_disabled_express",
              "name": "Sigma Checker cookie_session_signing_disabled_express",
              "shortDescription": {
                "text": "Cookie signing disabled"
              },
              "fullDescription": {
                "text": "The `cookie-session` module disables the signing of the cookie allowing a malicious user to change the value of the cookie and thus abuse any functionality that uses session data.\n"
              },
              "help": {
                "text": "Set the `signed` property to `true` (or omit it, as the default value is `true`) to prevent the session data from being freely manipulated.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_expose_sensitive_header_core_java",
              "name": "Sigma Checker cors_expose_sensitive_header_core_java",
              "shortDescription": {
                "text": "Exposing sensitive headers"
              },
              "fullDescription": {
                "text": "The CORS is configured to expose sensitive headers which may lead to leaking authentication keys, CSRF tokens, and other sensitive information.\n"
              },
              "help": {
                "text": "Carefully review the headers listed in `Access-Control-Expose-Headers` and remove any sensitive headers. Note that these headers can be read by a malicious origin if the application's `Access-Control-Allow-Origin` header is not configured securely. Omitting the `Access-Control-Expose-Headers` header results in only allowing a safe subset of headers exposed by default.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_expose_sensitive_header_terraform_aws_s3_bucket",
              "name": "Sigma Checker cors_expose_sensitive_header_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS is configured to expose sensitive headers. Exposing sensitive headers may lead to leaking authentication keys, CSRF tokens, and other sensitive information.\n"
              },
              "help": {
                "text": "Modify the AWS S3 Bucket's CORS configuration to remove the wildcard `*` from the `cors.expose_headers` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_headers_allowed_openapi_x_a127",
              "name": "Sigma Checker cors_headers_allowed_openapi_x_a127",
              "shortDescription": {
                "text": "List of allowed headers not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed HTTP request headers in the `Access-Control-Allow-Headers` list. By default, any header requested in a CORS preflight request will be allowed. Allowing an attacker to specify any HTTP header on a CORS request may facilitate bypassing authorization and CSRF controls.\n"
              },
              "help": {
                "text": "Modify the `Access-Control-Allow-Headers` directive to only allow necessary HTTP request headers. This is configured with an `x-a127-services` object with the `headers.Access-Control-Allow-Headers.default` property that is not set to the wildcard `'*'`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_headers_allowed_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_headers_allowed_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "List of allowed headers not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed HTTP request headers in the `Access-Control-Allow-Headers list`. By default, any header requested in a CORS preflight request will be allowed. Allowing an attacker to specify any HTTP header on a CORS request may facilitate bypassing authorization and CSRF controls.\n"
              },
              "help": {
                "text": "The `allowHeaders` value should contain a list of allowed domains."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_headers_allowed_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_headers_allowed_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "List of allowed headers not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed HTTP request headers in the `Access-Control-Allow-Headers` list. By default, any header requested in a CORS preflight request will be allowed. Allowing an attacker to specify any HTTP header on a CORS request may facilitate bypassing authorization and CSRF controls.\n"
              },
              "help": {
                "text": "Make sure to limit the list of allowed HTTP headers."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_headers_allowed_terraform_aws_s3_bucket",
              "name": "Sigma Checker cors_headers_allowed_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed headers in the Access-Control-Allowed-Headers HTTP header. By default, any header requested in a preflight request will be allowed. Allowing an attacker to specify any HTTP header on a CORS request may help with bypassing authorization and CSRF controls.\n"
              },
              "help": {
                "text": "Modify the AWS S3 Bucket's CORS configuration to remove the wildcard `*` from the `cors.allowed_headers` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_core_java",
              "name": "Sigma Checker cors_methods_allowed_core_java",
              "shortDescription": {
                "text": "List of allowed methods not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods which an attacker can abuse the application by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "Only allow the HTTP methods that are needed by the application for executing CORS requests.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_openapi_x_a127",
              "name": "Sigma Checker cors_methods_allowed_openapi_x_a127",
              "shortDescription": {
                "text": "List of allowed methods not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods. An attacker can abuse the API by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "Modify the `Access-Control-Allow-Methods` directive to only allow necessary HTTP request methods. This is configured with an `x-a127-services` object with the `headers.Access-Control-Allow-Methods.default` property that is not set to the wildcard `'*'`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_methods_allowed_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "List of allowed methods not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods. An attacker can abuse the API by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "The `allowMethods` value should contain a list of allowed HTTP methods."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_methods_allowed_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "List of allowed methods not restricted"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods. An attacker can abuse the API by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "Make sure to limit the list of allowed HTTP methods."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_terraform_aws_s3_bucket",
              "name": "Sigma Checker cors_methods_allowed_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods. An attacker can abuse the application by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "Modify the AWS S3 Bucket's CORS configuration to remove the wildcard `*` from the `cors.allowed_methods` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_methods_allowed_terraform_google_storage_bucket",
              "name": "Sigma Checker cors_methods_allowed_terraform_google_storage_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS policy does not restrict the list of allowed methods. An attacker can abuse the application by sending CORS requests using any of the methods allowed: GET, HEAD, PUT, PATCH, POST, DELETE.\n"
              },
              "help": {
                "text": "Modify the Google Storage Bucket CORS configuration so that the `cors.method` is not set to the wildcard `*`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_apollo_graphql",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_apollo_graphql",
              "shortDescription": {
                "text": "Apollo GraphQL Insecure CORS Configuration"
              },
              "fullDescription": {
                "text": "The Apollo Server enables the default cross-origin resource sharing (CORS) configuration by setting the `cors` option to `true`. As a result, server responses will be shared with all origins.\n"
              },
              "help": {
                "text": "Configure the `cors` middleware to only share server responses with trusted origins by explicitly setting `cors.origin` field to partner domains.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket insecure CORS configuration"
              },
              "fullDescription": {
                "text": "The Access-Control-Allow-Origin header is set to share the requested resource with any origin. This allows any origin, including a malicious one, to obtain this resource. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "Modify the `Properties.CorsConfiguration.CorsRules` so that `AllowedOrigins` does not include the wildcard `*` or the `null` origin."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_core_java",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_core_java",
              "shortDescription": {
                "text": "CORS requests allowed from all origins"
              },
              "fullDescription": {
                "text": "The `Access-Control-Allow-Origin` header is configured to bypass CORS controls and share the requested resource with any origin. An attacker can exploit this issue with a malicious cross-origin request and steal non-public responses from the application.\n"
              },
              "help": {
                "text": "Set the `Access-Control-Allow-Origin` header to a safe list of trusted origins that are allowed to access application resources.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_kafka_broker",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_kafka_broker",
              "shortDescription": {
                "text": "Kafka Broker With Insecure CORS Configuration"
              },
              "fullDescription": {
                "text": "The Kafka broker has an insecure Cross-Origin Resource Sharing (CORS) configuration that allows server responses to be shared with any origin.\n"
              },
              "help": {
                "text": "Configure the `access.control.allow.origin` field to only allow trusted origins. Avoid setting this field to the wildcard \"*\".\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_openapi_x_a127",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_openapi_x_a127",
              "shortDescription": {
                "text": "CORS requests allowed from all origins"
              },
              "fullDescription": {
                "text": "The `Access-Control-Allow-Origin` header is set to share the requested resource with any origin, including a malicious one. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "Audit the use of the `Access-Control-Allow-Origin` header. It should only be set to a trusted origin (not the wildcard `'*'` or `'null'` origin) if the API is private. This is configured with an `x-a127-services` object with the `headers.Access-Control-Allow-Origin.default` property set to a trusted origin."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "CORS requests allowed from all origins"
              },
              "fullDescription": {
                "text": "The `Access-Control-Allow-Origin` header is set to share the requested resource with any origin, including a malicious one. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "The credentialed request should specify a set of allowed origins, not `*` or `null`"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "CORS requests allowed from all origins"
              },
              "fullDescription": {
                "text": "The `Access-Control-Allow-Origin` header is set to share the requested resource with any origin, including a malicious one. If the resource is non-public, an attacker will be able to steal it\n"
              },
              "help": {
                "text": "The credentialed request should specify a set of allowed origins, not `*` or `null`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_postman",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_postman",
              "shortDescription": {
                "text": "API Endpoint Insecure CORS Configuration"
              },
              "fullDescription": {
                "text": "The Postman response references a CORS Access-Control-Allow-Origin header set to the wildcard `*` or the `null` origin, allowing the server response to be shared with all origins.\n"
              },
              "help": {
                "text": "Set the Access-Control-Allow-Origin header to the list of trusted origins.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_terraform_aws_s3_bucket",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The Access-Control-Allow-Origin header is set to share the requested resource with any origin. This allows any origin, including a malicious one, to obtain this resource. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "Modify the AWS S3 Bucket's CORS configuration to remove the wildcard `*` from the `cors.allowed_origins` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_terraform_azurerm_app_service",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The Access-Control-Allow-Origin header is set to share the requested resource with any origin. This allows any origin, including a malicious one, to obtain this resource. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "Modify the Azure App Service CORS configuration so that `cors.allowed_origins` is not set to the wildcard `*` or `null`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_no_credentials_permissive_origin_terraform_google_storage_bucket",
              "name": "Sigma Checker cors_no_credentials_permissive_origin_terraform_google_storage_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The Access-Control-Allow-Origin header is set to share the requested resource with any origin. This allows any origin, including a malicious one, to obtain this resource. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "Modify the Google Storage Bucket CORS configuration so that the `cors.origin` is not set to the wildcard `*` or `null`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker cors_preflight_age_too_long_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket insecure CORS configuration"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. An excessively long cache timeout increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Modify the `Properties.CorsConfiguration.CorsRules` so that `MaxAge` is not greater than `3600`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_openapi_x_a127",
              "name": "Sigma Checker cors_preflight_age_too_long_openapi_x_a127",
              "shortDescription": {
                "text": "Caching time for the preflight response is too long"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. This increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Set the `Access-Control-Max-Age` value to `1800` seconds or less. This is configured with an `x-a127-services` object with the `headers.Access-Control-Max-Age.default` property no greater than `1800`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_preflight_age_too_long_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "Caching time for the preflight response is too long"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. An excessively long cache timeout increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Make sure the `maxAge` is 30 mins or less (1800 seconds)"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_preflight_age_too_long_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "Caching time for the preflight response is too long"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. An excessively long cache timeout increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Make sure the `maxAge` is 30 mins or less (1800 seconds)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_terraform_aws_s3_bucket",
              "name": "Sigma Checker cors_preflight_age_too_long_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. An excessively long cache timeout increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Set the `cors.max_age_seconds` field to `3600` or less."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_preflight_age_too_long_terraform_google_storage_bucket",
              "name": "Sigma Checker cors_preflight_age_too_long_terraform_google_storage_bucket",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS preflight response caching time is too long. An excessively long cache timeout increases the risk that changes to a server's CORS policy will not be honored by some user agents as they still use a cached response.\n"
              },
              "help": {
                "text": "Modify the Google Storage Bucket CORS configuration so that the `cors.max_age_seconds` is `3600` or less."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_with_credentials_all_origin_openapi_x_a127",
              "name": "Sigma Checker cors_with_credentials_all_origin_openapi_x_a127",
              "shortDescription": {
                "text": "Credentials sent to all origins"
              },
              "fullDescription": {
                "text": "The CORS configuration allows credentialed responses to be read by all origins. A malicious origin can submit authenticated AJAX requests with the victim's session and read the server's response to those authenticated requests.\n"
              },
              "help": {
                "text": "The `Access-Control-Allow-Origin` header should only be set to a trusted origin, not to the wildcard `*` or `null` origin. This is configured with an `x-a127-services` object with the `headers.Access-Control-Allow-Origin.default` property set to a trusted origin.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_with_credentials_all_origin_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_with_credentials_all_origin_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "Credentials sent to all origins"
              },
              "fullDescription": {
                "text": "The CORS configuration allows credentialed responses to be read by all origins, including a malicious one. If the resource is non-public, an attacker will be able to steal it.\n"
              },
              "help": {
                "text": "The uncredentialed request should specify a set of allowed origins, not `*` or `null`"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_all_origin_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_with_credentials_all_origin_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "Credentials sent to all origins"
              },
              "fullDescription": {
                "text": "The CORS configuration allows credentialed responses to be read by all origins. A malicious origin can submit authenticated AJAX requests with the victim's session and read the server's response to those authenticated requests.\n"
              },
              "help": {
                "text": "The uncredentialed request should specify a set of allowed origins, not `*` or `null`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_all_origin_terraform_azurerm_app_service",
              "name": "Sigma Checker cors_with_credentials_all_origin_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Azure App Service with unsafe CORS configuration"
              },
              "fullDescription": {
                "text": "The CORS policy is set to allow credentialed requests from any origin. This allows a malicious origin to submit authenticated AJAX requests with the `withCredentials` flag and read the server's response to the authenticated request.\n"
              },
              "help": {
                "text": "Remove the wildcard `*` from the `cors.allowed_origins` array."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_with_credentials_http_origin_core_java",
              "name": "Sigma Checker cors_with_credentials_http_origin_core_java",
              "shortDescription": {
                "text": "Unencrypted origin trusted for credentialed requests"
              },
              "fullDescription": {
                "text": "The CORS policy shares responses to credentialed requests with non-HTTPS origins leaving the response vulnerable to man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "To avoid man-in-the-middle attacks, allow only credentialed requests from origins served over HTTPS.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_with_credentials_http_origin_openapi_x_a127",
              "name": "Sigma Checker cors_with_credentials_http_origin_openapi_x_a127",
              "shortDescription": {
                "text": "Unencrypted origin trusted for credentialed requests"
              },
              "fullDescription": {
                "text": "The CORS policy shares responses to credentialed requests with non-HTTPS origins, leaving it vulnerable to man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the CORS `Access-Control-Allow-Origin` header to only list origins using the `https://` protocol. This is configured with an `x-a127-services` object with the `headers.Access-Control-Allow-Origin.default` property that uses the `https://` scheme."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_http_origin_openapi_x_amazon_apigateway",
              "name": "Sigma Checker cors_with_credentials_http_origin_openapi_x_amazon_apigateway",
              "shortDescription": {
                "text": "Unencrypted origin trusted for credentialed requests"
              },
              "fullDescription": {
                "text": "The CORS policy shares responses to credentialed requests with non-HTTPS origins, leaving it vulnerable to man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Make sure the origins are all using a secure transport scheme (https)"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_http_origin_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker cors_with_credentials_http_origin_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "Unencrypted origin trusted for credentialed requests"
              },
              "fullDescription": {
                "text": "The CORS policy shares responses to credentialed requests with non-HTTPS origin. Note that `localhost` urls are considered secure.\n"
              },
              "help": {
                "text": "Make sure the origins are all using a secure transport scheme (HTTPS)."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_http_origin_terraform_azurerm_app_service",
              "name": "Sigma Checker cors_with_credentials_http_origin_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Unsafe CORS Configuration"
              },
              "fullDescription": {
                "text": "The CORS policy shares responses to credentialed requests with non-HTTPS origins. If the response is served over a non-HTTPS connection, the response is vulnerable to man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Modify the `cors.allowed_origins` array to only allow origins with the `https://` protocol."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "cors_with_credentials_null_origin_core_java",
              "name": "Sigma Checker cors_with_credentials_null_origin_core_java",
              "shortDescription": {
                "text": "Responses for credentialed CORS requests shared with null origin"
              },
              "fullDescription": {
                "text": "The CORS policy shares sensitive responses with the null origin by setting the `Access-Control-Allow-Origin` header `null`. An attacker can then use iFrames or HTTP redirects to generate requests with null origin. Since the user is logged in, the requests will be credentialed and their responses may contain sensitive information. The attacker can now be read this information, compromising the user's session.\n"
              },
              "help": {
                "text": "Do not allow the `null` origin if the `Access-Control-Allow-Credentials` header is set to `true`. Instead, specify the list of origins that should be allowed to make credentialed requests.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "cors_with_credentials_null_origin_terraform_azurerm_app_service",
              "name": "Sigma Checker cors_with_credentials_null_origin_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Azure App Service with unsafe CORS configuration"
              },
              "fullDescription": {
                "text": "The CORS policy shares sensitive responses with the null origin by setting the Access-Control-Allow-Origin header `null`. An attacker can use iFrames or HTTP redirects to generate requests with null origin. Since the user is logged in, the requests will be credentialed and their responses may contain sensitive information. The attacker can now be read this information, compromising the user's session.\n"
              },
              "help": {
                "text": "Remove the `null` origin from the `cors.allowed_origins` array."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "csrf_openapi",
              "name": "Sigma Checker csrf_openapi",
              "shortDescription": {
                "text": "Cross-site request forgery"
              },
              "fullDescription": {
                "text": "The API leverages cookie-based authentication and does not implement anti-CSRF tokens for state-changing operations. This allows an attacker to trick a client into making an unintentional request to the API which will be treated as an authentic request. The unintentional request may result in unintended execution of sensitive functionality.\n"
              },
              "help": {
                "text": "Consider using a non-cookie-based authentication mechanism. This is configured by defining a security scheme with the `type` as `oauth2` or the `in` field as `header`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "csrf_protection_disabled_spring_security_code",
              "name": "Sigma Checker csrf_protection_disabled_spring_security_code",
              "shortDescription": {
                "text": "Disabled Spring Security CSRF protection"
              },
              "fullDescription": {
                "text": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.\n"
              },
              "help": {
                "text": "Enable the Spring Security CSRF protection by omitting the invocation of `disable()`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "csrf_protection_disabled_spring_security_config",
              "name": "Sigma Checker csrf_protection_disabled_spring_security_config",
              "shortDescription": {
                "text": "The Spring Security CSRF protection is disabled"
              },
              "fullDescription": {
                "text": "The Spring Security CSRF protection is disabled. An attacker may trick a client into making an unintentional request to the web server which will be treated as an authentic request. It may result in unintended execution of sensitive functionality or in exposure of data if the CSRF protection is disabled.\n"
              },
              "help": {
                "text": "Enable the Spring Security CSRF protection by setting the attribute `disabled` to `false` or omit it as the default value is `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "custom_resource_in_default_namespace_kubernetes",
              "name": "Sigma Checker custom_resource_in_default_namespace_kubernetes",
              "shortDescription": {
                "text": "Kubernetes resource uses the default namespace"
              },
              "fullDescription": {
                "text": "The Kubernetes resource uses the `default` namespace by either omitting the `metadata.namespace` field or by explicitly setting the value to `default`. This can cause conflicts with other services and prevents granular access control.\n"
              },
              "help": {
                "text": "Explicitly set the resource's `metadata.namespace` field to a namespace other than `default`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dangerous_ropc_flow_openapi_v2",
              "name": "Sigma Checker dangerous_ropc_flow_openapi_v2",
              "shortDescription": {
                "text": "API supports unsafe OAuth2 flow"
              },
              "fullDescription": {
                "text": "The API uses the dangerous and deprecated Resource Owner Password Credentials flow directly exposing to the API (e.g. the OAuth2 client) where they may be stolen or used to request a more privileged scope.\n"
              },
              "help": {
                "text": "Modify the OAuth2 security scheme to use a secure OAuth2 flow such as `accessCode` or `application`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dangerous_ropc_flow_openapi_v3",
              "name": "Sigma Checker dangerous_ropc_flow_openapi_v3",
              "shortDescription": {
                "text": "API supports unsafe OAuth2 flow"
              },
              "fullDescription": {
                "text": "The API uses the dangerous and deprecated Resource Owner Password Credentials flow directly exposing to the API (e.g. the OAuth2 client) where they may be stolen or used to request a more privileged scope.\n"
              },
              "help": {
                "text": "Modify the OAuth2 security scheme to use a secure OAuth2 flow such as `authorizationCode` or `clientCredentials`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dangerous_ropc_flow_openapi_x_a127",
              "name": "Sigma Checker dangerous_ropc_flow_openapi_x_a127",
              "shortDescription": {
                "text": "Apigee service supports unsafe OAuth2 flow"
              },
              "fullDescription": {
                "text": "The Apigee service uses the dangerous and deprecated Resource Owner Password Credentials OAuth2 flow. This leaves the resource owner's credentials exposed directly to the API (e.g. the OAuth2 client) where they may be stolen or used to request a more privileged scope.\n"
              },
              "help": {
                "text": "Modify the OAuth2 security scheme so it does not use the Resource Owner Password Credential grant type. This is configured by removing the value `password` from the property array `x-a127-services.oauth2.options.validGrantTypes`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dangerous_ropc_flow_postman",
              "name": "Sigma Checker dangerous_ropc_flow_postman",
              "shortDescription": {
                "text": "API Endpoint Uses Dangerous OAuth Flow"
              },
              "fullDescription": {
                "text": "The Postman collection makes requests using the dangerous Resource Owner Password Credentials (ROPC) OAuth flow which exposes the resource owner's credentials to the client and removes the owner from the authorization process.\n"
              },
              "help": {
                "text": "Configure the API endpoint to use an alternate OAuth flow.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dangerous_ropc_flow_terraform_auth0",
              "name": "Sigma Checker dangerous_ropc_flow_terraform_auth0",
              "shortDescription": {
                "text": "Unsafe OAuth flow"
              },
              "fullDescription": {
                "text": "The Auth0 client uses the dangerous and deprecated Resource Owner Password Credentials flow which exposes the resource owner's credentials to the client and removes the resource owner from the scope authorization.\n"
              },
              "help": {
                "text": "Remove the string `password` from the `grant_type` array."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "data_sent_to_external_server_openapi",
              "name": "Sigma Checker data_sent_to_external_server_openapi",
              "shortDescription": {
                "text": "Data sent to different domain"
              },
              "fullDescription": {
                "text": "The operation contains a local `servers` parameter which sends data to a host that is different than the API host, possibly exposing sensitive information.\n"
              },
              "help": {
                "text": "Audit the API to verify if there exists a business justification for sending data to external servers."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_doc_db",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_doc_db",
              "shortDescription": {
                "text": "Amazon DocumentDB cluster server-side encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon DocDB cluster does not have server-side encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable server-side encryption by explicitly setting the `Properties.StorageEncrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_dynamo_db",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_dynamo_db",
              "shortDescription": {
                "text": "Amazon DynamoDB server-side encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon DynamoDB table does not have server-side encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable server-side encryption by explicitly setting the `Properties.SSESpecification.SSEEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_neptune_cluster",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_neptune_cluster",
              "shortDescription": {
                "text": "Amazon Neptune DB cluster encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Neptune DB cluster does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable DB cluster encryption by explicitly setting the `Properties.StorageEncrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_rds_cluster",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_rds_cluster",
              "shortDescription": {
                "text": "Amazon RDS DB cluster encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Relational Database Service (Amazon RDS) cluster is not encrypted, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable database cluster encryption by explicitly setting the `Properties.StorageEncrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_rds_instance",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_rds_instance",
              "shortDescription": {
                "text": "Amazon RDS DB instance encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Relational Database Service (Amazon RDS) instance is not encrypted, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable database encryption by explicitly setting the `Properties.StorageEncrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_cloudformation_redshift_cluster",
              "name": "Sigma Checker database_encryption_disabled_cloudformation_redshift_cluster",
              "shortDescription": {
                "text": "Amazon Redshift cluster encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Redshift cluster does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable Redshift cluster encryption by explicitly setting the `Properties.Encrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "database_encryption_disabled_terraform_aws_athena",
              "name": "Sigma Checker database_encryption_disabled_terraform_aws_athena",
              "shortDescription": {
                "text": "Missing AWS Athena database encryption"
              },
              "fullDescription": {
                "text": "The AWS Athena database does not have encryption enabled, exposing plain-text S3 query results at rest.\n"
              },
              "help": {
                "text": "Enable Athena database encryption by adding the `encryption_configuration` block with an `encryption_option` field and optional `kms_key` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "database_encryption_disabled_terraform_aws_rds",
              "name": "Sigma Checker database_encryption_disabled_terraform_aws_rds",
              "shortDescription": {
                "text": "Missing AWS RDS encryption"
              },
              "fullDescription": {
                "text": "AWS RDS instances do not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable database encryption by setting the `encryption_enabled` value to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_android",
              "name": "Sigma Checker debug_enabled_android",
              "shortDescription": {
                "text": "Android application with debug mode enabled"
              },
              "fullDescription": {
                "text": "The Android application is in debug mode when `android:debuggable` attribute is set `true`. An attacker might debug the internal state of the Android application and get access to sensitive data and services.\n"
              },
              "help": {
                "text": "Remove the `android:debuggable` attribute or set it to `false` before deployment.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_apollo_graphql_js",
              "name": "Sigma Checker debug_enabled_apollo_graphql_js",
              "shortDescription": {
                "text": "Apollo GraphQL Debug Mode Enabled"
              },
              "fullDescription": {
                "text": "The Apollo Server has the `debug` option set to `true` enabling development mode helpers which results in verbose logging and client error messages that include full stack traces.\n"
              },
              "help": {
                "text": "Disable the Apollo Server development mode helpers by setting the `debug` option to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_filter_spring_security",
              "name": "Sigma Checker debug_enabled_filter_spring_security",
              "shortDescription": {
                "text": "Spring Security debug mode enabled"
              },
              "fullDescription": {
                "text": "The `DebugFilter` is added to the `FilterChainProxy` which enables the debug mode. Enabling debug mode in the production code leads to security risks because it logs more details than necessary, and these details may be exposed to attackers.\n"
              },
              "help": {
                "text": "Remove the instantiation of the `DebugFilter`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_grails_springsecurity",
              "name": "Sigma Checker debug_enabled_grails_springsecurity",
              "shortDescription": {
                "text": "Debug filter is enabled"
              },
              "fullDescription": {
                "text": "The Spring Security debug filter is enabled in production. This leads to possible sensitive data leakage in logs.\n"
              },
              "help": {
                "text": "Make sure to disable the debug filter in production.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_servlet_dwr",
              "name": "Sigma Checker debug_enabled_servlet_dwr",
              "shortDescription": {
                "text": "DWR debug mode enabled"
              },
              "fullDescription": {
                "text": "DWR debug mode is enabled in the configuration file which exposes internal information through the /dwr/index.html page.\n"
              },
              "help": {
                "text": "Remove the debug attribute, or set it to false.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_enabled_spring_security",
              "name": "Sigma Checker debug_enabled_spring_security",
              "shortDescription": {
                "text": "Spring Security debug mode enabled"
              },
              "fullDescription": {
                "text": "Spring Security is used with debug mode enabled. This leads to security risks because it logs more details than necessary, and these details may be exposed to attackers.\n"
              },
              "help": {
                "text": "Set the `debug` element to `false` or omit it as the default value is `false`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_logging_enabled_cordova",
              "name": "Sigma Checker debug_logging_enabled_cordova",
              "shortDescription": {
                "text": "Cordova Excessive Log Level"
              },
              "fullDescription": {
                "text": "The Cordova application has been configured to create excessive logs using a `DEBUG` or `VERBOSE` log level. Excessive logging can expose sensitive information in log files.\n"
              },
              "help": {
                "text": "The log level of a production Cordova application should be set to `ERROR`, `WARN` or `INFO`, instead of `DEBUG` or `VERBOSE`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "debug_logging_enabled_spring_security_code",
              "name": "Sigma Checker debug_logging_enabled_spring_security_code",
              "shortDescription": {
                "text": "Spring Security debug mode enabled"
              },
              "fullDescription": {
                "text": "The Spring Web Security logging level is set to debug mode. Enabling debug mode in the production code leads to security risks because it logs more details than necessary, and these details may be exposed to attackers.\n"
              },
              "help": {
                "text": "Set the argument of the `debug()` call to `false` or omit it as the default value is `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "default_allow_all_authz_policy_cloudformation_aws_webacl",
              "name": "Sigma Checker default_allow_all_authz_policy_cloudformation_aws_webacl",
              "shortDescription": {
                "text": "AWS WebACL default allow all"
              },
              "fullDescription": {
                "text": "The AWS WebACL is configured with a default `ALLOW` action, permitting all web traffic unless explicitly denied.\n"
              },
              "help": {
                "text": "Set the `Properties.DefaultAction.Type` to `BLOCK` to deny all web traffic that is not explicitly allowed by a WebACL rule.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "default_allow_all_authz_policy_consul",
              "name": "Sigma Checker default_allow_all_authz_policy_consul",
              "shortDescription": {
                "text": "Consul ACL default allow all"
              },
              "fullDescription": {
                "text": "The Consul ACL is set to use a default allow-all configuration, granting access to all clients unless explicitly prohibited.\n"
              },
              "help": {
                "text": "Configure Consul to use a default deny-all configuration by explicitly setting the `acl.default_policy` to `deny`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "default_allow_all_authz_policy_istio_envoy",
              "name": "Sigma Checker default_allow_all_authz_policy_istio_envoy",
              "shortDescription": {
                "text": "Istio Envoy External Authorization Provider Fails Open"
              },
              "fullDescription": {
                "text": "The Istio Envoy authorization provider is configured to fail open, allowing all client requests when communication with the authorization service has failed or returned an HTTP 5xx error.\n"
              },
              "help": {
                "text": "Configure the authorization provider to fail closed by removing the `failOpen` field or explicitly setting the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "default_allow_all_authz_policy_kafka",
              "name": "Sigma Checker default_allow_all_authz_policy_kafka",
              "shortDescription": {
                "text": "Kafka ACL Defaults to Allow-All"
              },
              "fullDescription": {
                "text": "The Kafka message broker has a default allow-all configuration, granting access to all clients if an ACL is not explicitly defined for a particular resource.\n"
              },
              "help": {
                "text": "Set the `allow.everyone.if.no.acl.found` value to `false` to disable the default allow-all configuration.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "default_allow_all_authz_policy_openapi",
              "name": "Sigma Checker default_allow_all_authz_policy_openapi",
              "shortDescription": {
                "text": "Default allow-all authoritzation mechanism enabled"
              },
              "fullDescription": {
                "text": "The API does not have a global security scheme, indicating a default allow-all configuration. Any API operations without an explicit security scheme will allow unauthorized requests.\n"
              },
              "help": {
                "text": "The global security field should contain one or more security schemes, for example `{'security':[{'OAuth2':['read','write']}]}`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "default_service_account_enabled_kubernetes",
              "name": "Sigma Checker default_service_account_enabled_kubernetes",
              "shortDescription": {
                "text": "Container allows default service account"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration does not disallow the default service account.\n"
              },
              "help": {
                "text": "Set the `automountServiceAccountToken` top-level element to `false`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "default_service_account_enabled_terraform_google_compute",
              "name": "Sigma Checker default_service_account_enabled_terraform_google_compute",
              "shortDescription": {
                "text": "Default service account"
              },
              "fullDescription": {
                "text": "The Google Compute instance uses the default service account which is over-permissioned and can lead to vertical privilege escalation.\n"
              },
              "help": {
                "text": "Modify the Google Compute instance's `service_account` block to use a custom account with only the necessary permissions."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "deprecated_file_upload_apollo_graphql_js",
              "name": "Sigma Checker deprecated_file_upload_apollo_graphql_js",
              "shortDescription": {
                "text": "Apollo GraphQL Deprecated File Upload Mechanism"
              },
              "fullDescription": {
                "text": "The Apollo Server uses the built-in file upload module which is not fully supported in Node 14 and later, resulting in unexpected behavior. The Apollo GraphQL documentation warns against using this built-in module and states it will be removed in Apollo Server 3.\n"
              },
              "help": {
                "text": "The Apollo Server's built-in file upload module is enabled by default and should be explicitly disabled by setting the Apollo server `uploads` option to `false`. Once disabled, developers can manually integrate the latest version of `graphql-upload` or similar.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "deprecated_xss_header_spring_security",
              "name": "Sigma Checker deprecated_xss_header_spring_security",
              "shortDescription": {
                "text": "Use of the deprecated X-XSS-Protection HTTP header"
              },
              "fullDescription": {
                "text": "The deprecated `X-XSS-Protection` HTTP header is explicitly enabled. The security header X-XSS-Protection is easy to bypass and is set to be deprecated.\n"
              },
              "help": {
                "text": "Use a strong Content-Security-Policy that disables the use of inline JavaScript.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dev_mode_enabled_struts2",
              "name": "Sigma Checker dev_mode_enabled_struts2",
              "shortDescription": {
                "text": "Struts2 DevMode enabled"
              },
              "fullDescription": {
                "text": "Struts2 developer mode is enabled. As a result, the application can disclose sensitive debugging and logging information to unauthorized users.\n"
              },
              "help": {
                "text": "Disable Struts2 developer mode by setting `struts.devMode` to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disabled_session_fixation_protection_grails_springsecurity",
              "name": "Sigma Checker disabled_session_fixation_protection_grails_springsecurity",
              "shortDescription": {
                "text": "Session fixation protection is disabled"
              },
              "fullDescription": {
                "text": "The Spring Security default session fixation protection is disabled.\n"
              },
              "help": {
                "text": "Make sure to set `useSessionFixationPrevention` to `true` or use the defaults.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_aws_autoscaling",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_aws_autoscaling",
              "shortDescription": {
                "text": "Amazon Auto Scaling Group EBS encryption disabled"
              },
              "fullDescription": {
                "text": "The launch configuration for the Amazon Auto Scaling group specifies unencrypted Elastic Block Store (EBS) volumes, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable EBS volume encryption by setting the `Ebs.Encrypted` value to `true` for each object in the `Properties.BlockDeviceMappings` list.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_dax",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_dax",
              "shortDescription": {
                "text": "Amazon DAX cluster server-side encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon DAX cluster does not have server-side encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable server-side encryption by explicitly setting the `Properties.SSESpecification.SSEEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_efs",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_efs",
              "shortDescription": {
                "text": "Amazon Elastic File System encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Elastic File System (Amazon EFS) is not encrypted, potentially exposing data at rest.\n"
              },
              "help": {
                "text": "Enable encryption for the Amazon Elastic File System instance by explicitly setting the `Properties.Encrypted` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_elastic_cache_group",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_elastic_cache_group",
              "shortDescription": {
                "text": "Amazon ElasticCache Replication Group encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon ElasticCache Replication Group does not have encryption enabled for data at-rest.\n"
              },
              "help": {
                "text": "Enable encryption for data at-rest by explicitly setting the `Properties.AtRestEncryptionEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_elastic_search",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_elastic_search",
              "shortDescription": {
                "text": "Amazon ElasticSearch Domain encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon ElasticSearch Domain does not have encryption enabled for data at rest.\n"
              },
              "help": {
                "text": "Enable encryption for data at rest by explicitly setting the `Properties.EncryptionAtRestOptions.Enabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_cloudformation_workspace_volume",
              "name": "Sigma Checker disk_encryption_disabled_cloudformation_workspace_volume",
              "shortDescription": {
                "text": "Amazon WorkSpace volume encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon WorkSpace volume does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable volume encryption by explicitly setting the `Properties.UserVolumeEncryptionEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "disk_encryption_disabled_terraform_aws_dax",
              "name": "Sigma Checker disk_encryption_disabled_terraform_aws_dax",
              "shortDescription": {
                "text": "Missing Amazon DynamoDB encryption"
              },
              "fullDescription": {
                "text": "The Amazon DynamoDB Accelerator (DAX) does not encrypt data at rest.\n"
              },
              "help": {
                "text": "Explicitly set the `server_side_encryption.enabled` value to `true` to enable DAX disk encryption."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "disk_encryption_disabled_terraform_aws_ebs",
              "name": "Sigma Checker disk_encryption_disabled_terraform_aws_ebs",
              "shortDescription": {
                "text": "Missing disk-level encryption"
              },
              "fullDescription": {
                "text": "The AWS EBS disk is not encrypted, potentially exposing data at rest.\n"
              },
              "help": {
                "text": "Explicitly set the `encrypted` value to `true` in the AWS EBS volume resource definition."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "disk_encryption_disabled_terraform_aws_efs",
              "name": "Sigma Checker disk_encryption_disabled_terraform_aws_efs",
              "shortDescription": {
                "text": "Missing disk-level encryption"
              },
              "fullDescription": {
                "text": "The Amazon Elastic File System (EFS) instance has disk-level encryption disabled.\n"
              },
              "help": {
                "text": "Enable disk-level encryption on the Amazon EFS instance by explicitly setting the `encrypted` value to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "disk_encryption_disabled_terraform_azurerm_managed_disk",
              "name": "Sigma Checker disk_encryption_disabled_terraform_azurerm_managed_disk",
              "shortDescription": {
                "text": "Missing disk-level encryption"
              },
              "fullDescription": {
                "text": "Disk-level encryption is disabled for Azure managed disks.\n"
              },
              "help": {
                "text": "Enable Azure Storage Service Encryption (SSE) by explicitly setting the `encryption_settings.enabled` value to `true`, or remove the `enabled` field to use the default value `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "dynamic_method_invocation_struts2",
              "name": "Sigma Checker dynamic_method_invocation_struts2",
              "shortDescription": {
                "text": "Struts2 DynamicMethodInvocation allowed"
              },
              "fullDescription": {
                "text": "Struts2 `DynamicMethodInvocation` is enabled. This makes all public, zero-parameter methods callable by a user, which can lead to unexpected behavior.\n"
              },
              "help": {
                "text": "Remove the `DynamicMethodInvocation` property, or explicitly set the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "encryption_disabled_cloudformation_eks",
              "name": "Sigma Checker encryption_disabled_cloudformation_eks",
              "shortDescription": {
                "text": "Amazon EKS cluster secrets encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Elastic Kubernetes Service (Amazon EKS) cluster does not have secrets encryption enabled, exposing sensitive data at rest.\n"
              },
              "help": {
                "text": "Configure the EKS cluster to encrypt Kubernetes secrets by adding the string `secrets` to the list `Properties.EncryptionConfig.Resources`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "encryption_disabled_spring_security",
              "name": "Sigma Checker encryption_disabled_spring_security",
              "shortDescription": {
                "text": "No encryption performed"
              },
              "fullDescription": {
                "text": "The `noOpText()` method of the `org.springframework.security.crypto.encrypt.Encryptors` class is used. Using an encryptor that does not actually perform any encryption of the data may leak sensitive information to an attacker.\n"
              },
              "help": {
                "text": "Use one of the other securer encryptors from the `org.springframework.security.crypto.encrypt.Encryptors` class such as `delux()` or `stronger()` to perform encryption of the data."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "encryption_disabled_terraform_aws_eks",
              "name": "Sigma Checker encryption_disabled_terraform_aws_eks",
              "shortDescription": {
                "text": "Unencrypted Kubernetes secrets"
              },
              "fullDescription": {
                "text": "The AWS EKS cluster does not encrypt Kubernetes secrets.\n"
              },
              "help": {
                "text": "Enable encryption for data stored in Kubernetes secrets by configuring the `encryption_config.resources` field to include `secrets`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "excessive_token_lifetime_terraform_auth0",
              "name": "Sigma Checker excessive_token_lifetime_terraform_auth0",
              "shortDescription": {
                "text": "Excessive token lifetime"
              },
              "fullDescription": {
                "text": "The Auth0 token lifetime exceeds 30 minutes (i.e. 1800 seconds).\n"
              },
              "help": {
                "text": "Configure the Auth0 token to expire in 30 minutes or less by setting the `lifetime_in_seconds` or `token_lifetime` to a value no greater than `1800`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "exposed_privileged_account_cloudformation_aws_iam",
              "name": "Sigma Checker exposed_privileged_account_cloudformation_aws_iam",
              "shortDescription": {
                "text": "AWS IAM AccessKey for root account"
              },
              "fullDescription": {
                "text": "An AWS IAM secret access key is generated for the `root` account. The `root` account should be protected and should not be used for routine access.\n"
              },
              "help": {
                "text": "Change the `Properties.UserName` field to a value other than `root`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "exposed_privileged_account_cloudformation_ecs",
              "name": "Sigma Checker exposed_privileged_account_cloudformation_ecs",
              "shortDescription": {
                "text": "ECS Service With Admin Role"
              },
              "fullDescription": {
                "text": "The Amazon Elastic Container Service (Amazon ECS) has been granted an admin role, which violates the principle of least-privilege-necessary. As a result, compromised containers can make admin-level requests to other AWS services via the AWS SDK or CLI.\n"
              },
              "help": {
                "text": "Configure the ECS resource to use a non-admin role by modifying the `Properties.Role` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "expression_escaping_disabled_grails_gsp",
              "name": "Sigma Checker expression_escaping_disabled_grails_gsp",
              "shortDescription": {
                "text": "Expression escaping is disabled"
              },
              "fullDescription": {
                "text": "The Grails' GSP view auto html-escaping of expressions `${..}` is disabled.\n"
              },
              "help": {
                "text": "Make sure the `expression` of `codecs` is set to `html`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_filesize_graphql_js",
              "name": "Sigma Checker file_upload_misconfiguration_filesize_graphql_js",
              "shortDescription": {
                "text": "GraphQL Upload Without File Limits"
              },
              "fullDescription": {
                "text": "The file upload middleware from the `graphql-module` is missing the `maxFileSize` options. As a result, a malicious user can upload extremely large files to exhause server-side resources and create a denial of service condition."
              },
              "help": {
                "text": "Explicitly set the `maxFileSize` options to restrict the number of files that may be uploaded by a single client.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_max_files_graphql_js",
              "name": "Sigma Checker file_upload_misconfiguration_max_files_graphql_js",
              "shortDescription": {
                "text": "GraphQL Upload Without File Limits"
              },
              "fullDescription": {
                "text": "The file upload middleware from the `graphql-module` is missing the `maxFiles` options. As a result, a malicious user can upload an unlimited number of files to exhause server-side resources and create a denial of service condition."
              },
              "help": {
                "text": "Explicitly set `maxFiles` options to restrict the number of files that may be uploaded by a single client.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_of_fields_express",
              "name": "Sigma Checker file_upload_misconfiguration_of_fields_express",
              "shortDescription": {
                "text": "Number of file/non-file fields not restricted"
              },
              "fullDescription": {
                "text": "The `express-fileupload` module does not restrict the number of file/non-file fields in a single request. Thus, a denial-of-service attack is possible, because an attacker may submit a very large number of file/non-file fields in one request.\n"
              },
              "help": {
                "text": "Limit the number of file fields in a request by setting the `files` property and the number of non-file fields by setting the `fields` property in the `limits` object of the options.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_of_file_path_express",
              "name": "Sigma Checker file_upload_misconfiguration_of_file_path_express",
              "shortDescription": {
                "text": "User specified path used"
              },
              "fullDescription": {
                "text": "The `express-fileupload` module allows users to provide their own paths for storing uploaded files. This allows for path manipulation since users can upload and overwrite existing files in user-selected locations.\n"
              },
              "help": {
                "text": "Set the `preservePath` property to `false` (or omit it, as the default value is `false`) to prevent path manipulation. If the application requires users to specify the file path, ensure that the specified path is valid before saving the file.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_of_filesize_express",
              "name": "Sigma Checker file_upload_misconfiguration_of_filesize_express",
              "shortDescription": {
                "text": "Filesize not restricted for the uploaded file"
              },
              "fullDescription": {
                "text": "The `express-fileupload` module does not restrict the size of the uploaded file. Thus, a denial-of-service attack is possible, because an attacker may submit a series of requests with very large files and use up all the space on the server.\n"
              },
              "help": {
                "text": "Limit the size of an uploaded file by setting the `fileSize` property to a reasonable number no greater than 500Mb in the `limits` object of the options.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_of_safe_file_names_express",
              "name": "Sigma Checker file_upload_misconfiguration_of_safe_file_names_express",
              "shortDescription": {
                "text": "No sanitization of user-provided filenames"
              },
              "fullDescription": {
                "text": "The dangerous characters from user-provided file names are not stripped in the `express-fileupload` module. Path manipulation is then possible since users can upload files with unsafe names.\n"
              },
              "help": {
                "text": "Set the `safeFileNames` to `true` to strip out the dangerous characters from the upload's file name.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "file_upload_misconfiguration_of_temp_files_express",
              "name": "Sigma Checker file_upload_misconfiguration_of_temp_files_express",
              "shortDescription": {
                "text": "Memory buffers used for uploaded files"
              },
              "fullDescription": {
                "text": "Memory buffers are used for managing uploads in the `express-fileupload` module. Thus, a denial-of-service attack is possible, because an attacker may submit a very large number of file fields in one request and exhaust the server memory.\n"
              },
              "help": {
                "text": "Use the temporary files instead of the memory buffer and specify a temporary files directory by setting the `useTempFile` property in the option.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "gateway_exposes_all_hosts_istio",
              "name": "Sigma Checker gateway_exposes_all_hosts_istio",
              "shortDescription": {
                "text": "Istio Gateway Exposes All Hosts"
              },
              "fullDescription": {
                "text": "The Istio Gateway is configured to expose all domains and namespaces, indicated by the `hosts` value `*`, potentially exposing unintended servers.\n"
              },
              "help": {
                "text": "Configure the `hosts` list to only expose those domains and namespaces explicitly listed.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "hardcoded_credentials_uri_core_java",
              "name": "Sigma Checker hardcoded_credentials_uri_core_java",
              "shortDescription": {
                "text": "Use of hard-coded URI password"
              },
              "fullDescription": {
                "text": "A URI with a password component is stored directly in the source code. Users with access to source code can use this password to gain access to services or data at a protected URI. The credentials may also be visible as clear text whenever the full URI is logged, stored, or transmitted insecurely.\n"
              },
              "help": {
                "text": "Credentials should be stored in a configuration file or database that is inaccessible to unauthorized users.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_password_ldap_spring_security",
              "name": "Sigma Checker hardcoded_password_ldap_spring_security",
              "shortDescription": {
                "text": "Spring Security hardcoded credentials"
              },
              "fullDescription": {
                "text": "Hardcoded credentials are found in the Spring Security configuration. Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change.\n"
              },
              "help": {
                "text": "It is best practice to move the credentials outside of the XML configuration.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_password_spring_security",
              "name": "Sigma Checker hardcoded_password_spring_security",
              "shortDescription": {
                "text": "Spring Security hardcoded credentials"
              },
              "fullDescription": {
                "text": "Hardcoded credentials are found in the Spring Security configuration. Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change.\n"
              },
              "help": {
                "text": "It is best to move user authentication outside of the XML configuration, for example, using an authentication service.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_remember_me_key_spring_security",
              "name": "Sigma Checker hardcoded_remember_me_key_spring_security",
              "shortDescription": {
                "text": "Spring Security hardcoded remember-me key"
              },
              "fullDescription": {
                "text": "The remember-me key is hardcoded in the Spring Security configuration. Hardcoded credentials may be accessible to unauthorized users and difficult to quickly change.\n"
              },
              "help": {
                "text": "It might be acceptable to have a hardcoded key if the application is not deployed in multiple environments. Otherwise, do one of the following:\n  - Change the hardcoded key for each environment.\n  - Use a service such as:\n    ```\n    <remember-me services-ref=\"rememberMeServices\"/>\n    ```\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_secret_cloudformation",
              "name": "Sigma Checker hardcoded_secret_cloudformation",
              "shortDescription": {
                "text": "CloudFormation file contains hard-coded secret"
              },
              "fullDescription": {
                "text": "The Terraform configuration file contains a hardcoded secret such as a password, API key, signing key, token, etc.\n"
              },
              "help": {
                "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or secret store.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "hardcoded_secret_kubernetes",
              "name": "Sigma Checker hardcoded_secret_kubernetes",
              "shortDescription": {
                "text": "Kubernetes file contains hardcoded secret"
              },
              "fullDescription": {
                "text": "The Kubernetes configuration file contains a hardcoded secret such as a password, API key, signing key, token, etc.\n"
              },
              "help": {
                "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using placeholders with the sensitive data loaded from a Kubernetes SealedSecret object or similar."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_secret_postman",
              "name": "Sigma Checker hardcoded_secret_postman",
              "shortDescription": {
                "text": "Postman Collection Contains Hardcoded Secret"
              },
              "fullDescription": {
                "text": "The Postman collection contains requests with hardcoded secrets.\n"
              },
              "help": {
                "text": "Remove any secrets from the collection and dynamically include them at runtime using Postman variables.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_secret_rabbitmq",
              "name": "Sigma Checker hardcoded_secret_rabbitmq",
              "shortDescription": {
                "text": "RabbitMQ Unprotected Credentials"
              },
              "fullDescription": {
                "text": "The RabbitMQ configuration file contains hardcoded secrets that might be leaked to anyone with access to the source code.\n"
              },
              "help": {
                "text": "Use the RabbitMQ built-in PBKDF2 mechanism to protect configuration secrets. Specifically, move the key-value pair into an Erlang `encrypted` tuple in the RabbitMQ `advanced.config` file.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hardcoded_secret_terraform",
              "name": "Sigma Checker hardcoded_secret_terraform",
              "shortDescription": {
                "text": "Terraform file contains hardcoded secret"
              },
              "fullDescription": {
                "text": "The Terraform configuration file contains a hardcoded secret such as a password, API key, signing key, token, etc.\n"
              },
              "help": {
                "text": "Avoid setting sensitive configuration values as string literals. Instead, these values should be set using variables with the sensitive data loaded from an encrypted file or secret store."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hpkp_max_age_too_long_express",
              "name": "Sigma Checker hpkp_max_age_too_long_express",
              "shortDescription": {
                "text": "Caching time for the HPKP policy is too long"
              },
              "fullDescription": {
                "text": "The `maxAge` property is set to a value greater than two months. The longer a client stores the pinned keys, the longer an attacker has to steal and hijack them.\n"
              },
              "help": {
                "text": "Set the `maxAge` property to a value less than two months.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "hpkp_report_uri_missing_tls_express",
              "name": "Sigma Checker hpkp_report_uri_missing_tls_express",
              "shortDescription": {
                "text": "Violation reports sent over an insecure channel"
              },
              "fullDescription": {
                "text": "The report URI is set to use an insecure channel for violation reports. If this endpoint is offered over an insecure channel, an attacker may modify the violation reports in transit.\n"
              },
              "help": {
                "text": "Set the `reportUri` property so that the application sends the violation reports over a secure channel.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_any_http_method_spring",
              "name": "Sigma Checker http_firewall_allow_any_http_method_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `unsafeAllowAnyHttpMethod` to `true` allows any HTTP method without validation. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `unsafeAllowAnyHttpMethod` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_any_http_method_spring_config",
              "name": "Sigma Checker http_firewall_allow_any_http_method_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `unsafeAllowAnyHttpMethod` to `true` allows any HTTP method to execute without validation. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `unsafeAllowAnyHttpMethod` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_backslash_spring",
              "name": "Sigma Checker http_firewall_allow_backslash_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowBackSlash` to `true` allows a backslash `\\` which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowBackSlash` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_backslash_spring_config",
              "name": "Sigma Checker http_firewall_allow_backslash_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowBackSlash` to `true` allows a backslash `\\` which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowBackSlash` to `false` or omit it as the default value.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_encoded_percent_spring_config",
              "name": "Sigma Checker http_firewall_allow_encoded_percent_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedPercent` to `true` allows a percent `%` in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedPercent` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_encoded_period_spring_config",
              "name": "Sigma Checker http_firewall_allow_encoded_period_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedPeriod` to `true` allows a period `.` in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedPeriod` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_encoded_slash_spring_config",
              "name": "Sigma Checker http_firewall_allow_encoded_slash_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedSlash` to `true` allows a URL encoded slash in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedSlash` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_semicolon_spring",
              "name": "Sigma Checker http_firewall_allow_semicolon_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowSemicolon` to `true` allows a semicolon in the URL and might result in Reflected File Download Attacks. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowSemicolon` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_semicolon_spring_config",
              "name": "Sigma Checker http_firewall_allow_semicolon_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowSemicolon` to `true` allows a semicolon in the URL and might result in Reflected File Download Attacks. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowSemicolon` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_url_encoded_percent_spring",
              "name": "Sigma Checker http_firewall_allow_url_encoded_percent_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedPercent` to `true` allows a percent `%` in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedPercent` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_url_encoded_period_spring",
              "name": "Sigma Checker http_firewall_allow_url_encoded_period_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedPeriod` to `true` allows a period `.` in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedPeriod` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_allow_url_encoded_slash_spring",
              "name": "Sigma Checker http_firewall_allow_url_encoded_slash_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Setting the attribute `allowUrlEncodedSlash` to `true` allows a URL encoded slash in the URL which might help bypass URL-based security controls. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Set the attribute `allowUrlEncodedSlash` to `false` or omit it as the default value (`false`).\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_insecure_default_spring",
              "name": "Sigma Checker http_firewall_insecure_default_spring",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Creating the HTTP firewall `DefaultHttpFirewall`. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Use `StrictHttpFirewall` with default settings to enable the strongest level of request checks.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_firewall_insecure_default_spring_config",
              "name": "Sigma Checker http_firewall_insecure_default_spring_config",
              "shortDescription": {
                "text": "Insecure HTTP firewall"
              },
              "fullDescription": {
                "text": "Creating the HTTP firewall `DefaultHttpFirewall`. This results in malicious requests not being handled by the server; therefore, they can reach the application and tamper or exfiltrate sensitive data.\n"
              },
              "help": {
                "text": "Use `StrictHttpFirewall` with default settings to enable the strongest level of request checks.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_method_missing_authz_openapi",
              "name": "Sigma Checker http_method_missing_authz_openapi",
              "shortDescription": {
                "text": "Missing authorization mechanism"
              },
              "fullDescription": {
                "text": "The API does not have a global security scheme, and one or more operations are missing a local security scheme which allows unauthorized requests.\n"
              },
              "help": {
                "text": "Audit the configuration of operation-level security controls. This is configured by a non-empty local security field, for example `{'security':[{'OAuth2':['read','write']}]}`. The best practice is to apply the security controls globally, rather than per operation, to avoid accidentally leaving an operation unprotected.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_method_missing_authz_terraform_aws_api_gateway",
              "name": "Sigma Checker http_method_missing_authz_terraform_aws_api_gateway",
              "shortDescription": {
                "text": "AWS API gateway authorization is disabled"
              },
              "fullDescription": {
                "text": "AWS API gateway authorization must be explicitly enabled for each method (except OPTIONS).\n"
              },
              "help": {
                "text": "Set an authentication method in the `authorization` attribute of the `resource\\aws_api_gateway_method` elements in the Terraform configuration files."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "http_verb_tampering_method_inclusion_servlet",
              "name": "Sigma Checker http_verb_tampering_method_inclusion_servlet",
              "shortDescription": {
                "text": "The web application is vulnerable to an HTTP Verb Tampering attack"
              },
              "fullDescription": {
                "text": "The `<http-method>` restriction forces the security constraint to apply only to these HTTP methods. Any other HTTP method would bypass the constraint, allowing an attacker to circumvent the intended security control.\n"
              },
              "help": {
                "text": "Remove all `<http-method>` tags from the `<web-resource-collection>` so that all HTTP methods are considered.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "http_verb_tampering_method_omission_servlet",
              "name": "Sigma Checker http_verb_tampering_method_omission_servlet",
              "shortDescription": {
                "text": "The web application is vulnerable to an HTTP Verb Tampering attack"
              },
              "fullDescription": {
                "text": "The `<http-method-omission>` restriction allows the security constraint to be bypassed for these methods. Note that the `OPTIONS` HTTP method is allowed to be omitted without any security risk.\n"
              },
              "help": {
                "text": "Remove all `<http-method-omission>` tags that include HTTP methods other than `OPTIONS` from the `<web-resource-collection>` node, so that the security constraint is applied to all relevant HTTP methods.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "iam_role_allows_open_access_cloudformation_aws_iam",
              "name": "Sigma Checker iam_role_allows_open_access_cloudformation_aws_iam",
              "shortDescription": {
                "text": "AWS IAM Role Open Access"
              },
              "fullDescription": {
                "text": "The AWS IAM role allows all actions from all users, indicated by an `Allow` effect with the `Principal` set to the wildcard `*`.\n"
              },
              "help": {
                "text": "Modify the role so the `Principal` is set to a specific account, IAM role,  federated user, AWS service, etc. and not the wildcard `*`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "image_scanning_disabled_terraform_aws_ecr",
              "name": "Sigma Checker image_scanning_disabled_terraform_aws_ecr",
              "shortDescription": {
                "text": "AWS ECR image scanning disabled"
              },
              "fullDescription": {
                "text": "Automatic AWS ECR image scanning is disabled, allowing users to push vulnerable container images to the repository.\n"
              },
              "help": {
                "text": "Explicitly set the `image_scanning_configuration.scan_on_push` field to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_network_bind_apollo_graphql_js",
              "name": "Sigma Checker insecure_network_bind_apollo_graphql_js",
              "shortDescription": {
                "text": "Apollo GraphQL Insecure Network Bind"
              },
              "fullDescription": {
                "text": "The Apollo GraphQL server binds to all network interfaces, possibly exposing it to unintended networks.\n"
              },
              "help": {
                "text": "Configure the `ApolloServer.listen.options.host` value to bind to a specific network interface.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_network_bind_consul",
              "name": "Sigma Checker insecure_network_bind_consul",
              "shortDescription": {
                "text": "Consul insecure network bind"
              },
              "fullDescription": {
                "text": "The Consul server binds to all interfaces, potentially exposing it to unintended networks.\n"
              },
              "help": {
                "text": "Set the offending field to a specific network interface and not `0.0.0.0`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_network_bind_kafka",
              "name": "Sigma Checker insecure_network_bind_kafka",
              "shortDescription": {
                "text": "Kafka Listener Bound to All Interfaces"
              },
              "fullDescription": {
                "text": "The Kafka broker is bound to all interfaces, potentially exposing the service to unintended networks.\n"
              },
              "help": {
                "text": "Modify the Kafka listener to only bind to the required network interface(s) instead of all interfaces indicated by `0.0.0.0`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_network_bind_kubernetes",
              "name": "Sigma Checker insecure_network_bind_kubernetes",
              "shortDescription": {
                "text": "Kubernetes insecure network bind"
              },
              "fullDescription": {
                "text": "The Kubernetes resource binds to all network interfaces, exposing it to unintended IP ranges.\n"
              },
              "help": {
                "text": "Set the `bind-address` to a value other than `0.0.0.0`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "insecure_network_bind_rabbitmq_tcp",
              "name": "Sigma Checker insecure_network_bind_rabbitmq_tcp",
              "shortDescription": {
                "text": "RabbitMQ AMQP TCP Listener Insecure Network Bind"
              },
              "fullDescription": {
                "text": "By default, RabbitMQ will listen on all interfaces for TCP connections on port 5672. The `listeners.tcp` option must specify a network interface other than `0.0.0.0` to avoid exposing the RabbitMQ broker to all networks.\n"
              },
              "help": {
                "text": "Configure the listener to bind to a specific network interface and port (i.e. not 0.0.0.0). For example, `listeners.tcp.default = 192.0.5.5:5672`. Alternatively, the TCP listener may be disabled by setting the `listeners.tcp` value to `none`. This may be used to force all connections through a TLS listener defined in the `listeners.ssl` option.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_network_bind_rabbitmq_tls",
              "name": "Sigma Checker insecure_network_bind_rabbitmq_tls",
              "shortDescription": {
                "text": "RabbitMQ AMQP TLS Listener Insecure Network Bind"
              },
              "fullDescription": {
                "text": "The `listeners.ssl` option binds the listener to `0.0.0.0`, exposing the RabbitMQ broker to all networks.\n"
              },
              "help": {
                "text": "Configure the listener to bind to a specific network interface and port (i.e. not 0.0.0.0). For example, `listeners.ssl.default = 192.0.5.5:5671`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_cipher_suite_cloudformation_load_balancer",
              "name": "Sigma Checker insecure_tls_cipher_suite_cloudformation_load_balancer",
              "shortDescription": {
                "text": "AWS Load Balancer supports insecure TLS policy"
              },
              "fullDescription": {
                "text": "The AWS Load Balancer is configured with an insecure policy that supports weak TLS cipher suites.\n"
              },
              "help": {
                "text": "Set the `SslPolicy` field to a policy that requires secure cipher suites, for example `ELBSecurityPolicy-FS-1-2-Res-2020-10`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_cloudformation_cloudfront",
              "name": "Sigma Checker insecure_tls_version_cloudformation_cloudfront",
              "shortDescription": {
                "text": "CloudFront distribution minimum TLS version"
              },
              "fullDescription": {
                "text": "The CloudFront distribution supports SSL/TLS versions prior to TLS 1.2. This occurs because either the `MinimumProtocolVersion` is set to an insecure value, the `CloudFrontDefaultCertificate` option is enabled (which overrides the `MinimumProtocolVersion` and defaults to TLS 1.0), or the `ViewerCertificate` is undefined (which again defaults to TLS 1.0).\n"
              },
              "help": {
                "text": "Set the `DistributionConfig.ViewerCertificate.MinimumProtocolVersion` value to `TLSv1.2_2018` or `TLSv1.2_2019`. Verify that the `DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate` field is not set to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_cloudformation_elastic_search",
              "name": "Sigma Checker insecure_tls_version_cloudformation_elastic_search",
              "shortDescription": {
                "text": "Amazon ElasticSearch minimum TLS version"
              },
              "fullDescription": {
                "text": "The Amazon Elasticsearch Service (Amazon ES) domain supports TLS 1.0.\n"
              },
              "help": {
                "text": "Configure the ElasticSearch service domain to require TLS 1.2 or newer by explicitly setting the `Properties.DomainEndpointOptions.TLSSecurityPolicy` value to `Policy-Min-TLS-1-2-2019-07`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_cloudformation_load_balancer",
              "name": "Sigma Checker insecure_tls_version_cloudformation_load_balancer",
              "shortDescription": {
                "text": "AWS Load Balancer supports insecure TLS policy"
              },
              "fullDescription": {
                "text": "The AWS Load Balancer is configured with an insecure policy that support early TLS versions.\n"
              },
              "help": {
                "text": "Set the `SslPolicy` field to a policy that requires at least TLS 1.2, for example `ELBSecurityPolicy-TLS-1-2-2017-01`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_kafka",
              "name": "Sigma Checker insecure_tls_version_kafka",
              "shortDescription": {
                "text": "Kafka TLS With Insecure Protocol"
              },
              "fullDescription": {
                "text": "The Kafka broker supports an insecure TLS version.\n"
              },
              "help": {
                "text": "Configure the broker to only support TLSv1.2 or newer.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "insecure_tls_version_terraform_azurerm_app_service",
              "name": "Sigma Checker insecure_tls_version_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Unsafe minimum TLS version"
              },
              "fullDescription": {
                "text": "The Azure App service supports unsafe TLS versions.\n"
              },
              "help": {
                "text": "Explicitly set the `site_config.min_tls_version` to `1.2`, or remove the `min_tls_version` field to use the default value `1.2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_terraform_azurerm_postgresql",
              "name": "Sigma Checker insecure_tls_version_terraform_azurerm_postgresql",
              "shortDescription": {
                "text": "Unsafe minimum TLS version"
              },
              "fullDescription": {
                "text": "The Azure PostgreSQL server supports unsafe TLS versions.\n"
              },
              "help": {
                "text": "Explicitly set the `ssl_minimal_tls_version_enforced` value to `TLS1_2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insecure_tls_version_terraform_azurerm_storage_account",
              "name": "Sigma Checker insecure_tls_version_terraform_azurerm_storage_account",
              "shortDescription": {
                "text": "Unsafe minimum TLS version"
              },
              "fullDescription": {
                "text": "The Azure Storage server supports unsafe TLS versions.\n"
              },
              "help": {
                "text": "Explicitly set the `min_tls_version` value to `TLS1_2`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insufficient_brute_force_protection_terraform_auth0",
              "name": "Sigma Checker insufficient_brute_force_protection_terraform_auth0",
              "shortDescription": {
                "text": "Auth0 brute-force protection disabled"
              },
              "fullDescription": {
                "text": "The default Auth0 brute-force protections have been disabled, allowing an attacker to repeatedly target a single account from a single IP address.\n"
              },
              "help": {
                "text": "Enable the default brute-force protections by removing the `options.brute_force_protection` field or explicitly setting the value to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insufficient_log_retention_terraform_azurerm",
              "name": "Sigma Checker insufficient_log_retention_terraform_azurerm",
              "shortDescription": {
                "text": "Insufficient log retention"
              },
              "fullDescription": {
                "text": "The Azure log retention policy is configured to purge log data after less than the recommended 365 days.\n"
              },
              "help": {
                "text": "Modify the log policy so that the `retention_policy.days` value is greater than `365` or is set to `0` (i.e. indefinite retention)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "insufficient_logging_terraform_aws_api_gateway",
              "name": "Sigma Checker insufficient_logging_terraform_aws_api_gateway",
              "shortDescription": {
                "text": "AWS API Gateway access logging disabled"
              },
              "fullDescription": {
                "text": "The AWS API Gateway does not have native access logging enabled.\n"
              },
              "help": {
                "text": "Configure the `access_log_settings` block to enable native access logging integrated with a CloudWatch Logs group or Kinesis Data Firehose delivery stream."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "insufficient_logging_terraform_azurerm",
              "name": "Sigma Checker insufficient_logging_terraform_azurerm",
              "shortDescription": {
                "text": "Missing event logs"
              },
              "fullDescription": {
                "text": "The Azure log profile does not collect logs for one or more of the following categories: `Action`, `Delete`, or `Write`. As a result, the missing activity categories cannot be audited.\n"
              },
              "help": {
                "text": "Modify the `categories` array to include `Action`, `Delete`, and `Write`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "introspection_enabled_apollo_graphql_js",
              "name": "Sigma Checker introspection_enabled_apollo_graphql_js",
              "shortDescription": {
                "text": "Apollo GraphQL Introspection Enabled"
              },
              "fullDescription": {
                "text": "The Apollo GraphQL server has introspection enabled, exposing query schema data. An attacker can use this information to facilitate subsequent attacks against the query schema.\n"
              },
              "help": {
                "text": "Disable introspection by explicitly setting the Apollo server's `introspection` option to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "javascript_code_in_description_openapi",
              "name": "Sigma Checker javascript_code_in_description_openapi",
              "shortDescription": {
                "text": "JavaScript in spec file"
              },
              "fullDescription": {
                "text": "The text spec file contains JavaScript code in the `description` field. Embedded JavaScript in this field may be used by an attacker to facilitate cross-site scripting (XSS) attacks when the spec file is viewed in browser-based Swagger tools.\n"
              },
              "help": {
                "text": "Audit the use of JavaScript in the OpenAPI spec file to verify that it is necessary and safe."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "jwt_untrusted_decode_express",
              "name": "Sigma Checker jwt_untrusted_decode_express",
              "shortDescription": {
                "text": "JsonWebToken decoded not verified"
              },
              "fullDescription": {
                "text": "The application decodes a JWT using the `decode()` function, but does not verify the token signature beforehand. Thus, an attacker can use a forged token accepted by the application to gain user privileges, read sensitive data, or execute sensitive commands, depending on the application functionality.\n"
              },
              "help": {
                "text": "Always sign JWTs and verify them using the `verify()` function before using the content of the token. Note that `verify()` returns decoded token value and there is no need to use the `decode()` function.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "jwt_untrusted_decode_kafka",
              "name": "Sigma Checker jwt_untrusted_decode_kafka",
              "shortDescription": {
                "text": "Kafka JWT Authorization Unsecured"
              },
              "fullDescription": {
                "text": "The Kafka broker uses the OAUTHBEARER authorization scheme which creates and validates unsecured JWTs using the `none` algorithm, allowing an attacker to forge arbitrary tokens.\n"
              },
              "help": {
                "text": "Configure the Kafka broker to use a custom token handler via the `listener.name.sasl_ssl.oauthbearer.sasl.server.callback.handler` field.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "kms_encryption_service_disabled_kubernetes",
              "name": "Sigma Checker kms_encryption_service_disabled_kubernetes",
              "shortDescription": {
                "text": "Kubernetes Encryption Without KMS"
              },
              "fullDescription": {
                "text": "The Kubernetes EncryptionConfiguration does not use the KMS provider to encrypt data at rest. The KMS provider uses Envelope encryption via a separate key, not stored in Kubernetes which provides a higher level of security than locally-stored encryption keys.\n"
              },
              "help": {
                "text": "Modify the EncryptionConfiguration's `resources.resources.providers` block so that `kms` is the first provider. Any subsequent providers will only be used to decrypt existing data at rest."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "legacy_attribute_based_access_control_terraform_gke",
              "name": "Sigma Checker legacy_attribute_based_access_control_terraform_gke",
              "shortDescription": {
                "text": "Legacy Attribute-Based Access Control Model"
              },
              "fullDescription": {
                "text": "The GKE cluster uses the legacy Attribute-Based Access Control (ABAC) model, which makes reviewing and modifying permissions difficult.\n"
              },
              "help": {
                "text": "Remove the `enable_legacy_abac` field or explicitly set it to `false` to disable Attribute-Based-Access-Control (ABAC) and enable Role-Based-Access-Control (RBAC)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "logging_disabled_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker logging_disabled_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket access logging disabled"
              },
              "fullDescription": {
                "text": "The AWS S3 Bucket does not have access logging enabled.\n"
              },
              "help": {
                "text": "Enable access logging for the AWS S3 Bucket by defining the `LoggingConfiguration` field.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "logging_disabled_consul",
              "name": "Sigma Checker logging_disabled_consul",
              "shortDescription": {
                "text": "Consul audit logging disabled"
              },
              "fullDescription": {
                "text": "Consul audit logging is disabled.\n"
              },
              "help": {
                "text": "Enable audit logging by explicitly setting the `audit.enabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "logging_disabled_istio",
              "name": "Sigma Checker logging_disabled_istio",
              "shortDescription": {
                "text": "Istio Access Logging Disabled"
              },
              "fullDescription": {
                "text": "Istio's access logging mechanism is disabled.\n"
              },
              "help": {
                "text": "Set the `meshConfig.accessLogFile` to a non-empty value to enable access logging.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "logging_disabled_kubernetes",
              "name": "Sigma Checker logging_disabled_kubernetes",
              "shortDescription": {
                "text": "Kubernetes API server logging disabled"
              },
              "fullDescription": {
                "text": "The Kubernetes API server does not have native logging enabled, as indicated by the absence of the `--audit-policy-file` flag.\n"
              },
              "help": {
                "text": "Modify the `kube-apiserver` specification to include the `--audit-policy-file` flag to activate the logging policy."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "logging_disabled_terraform_aws_load_balancer",
              "name": "Sigma Checker logging_disabled_terraform_aws_load_balancer",
              "shortDescription": {
                "text": "AWS ELB access logging disabled"
              },
              "fullDescription": {
                "text": "The AWS Elastic Load Balancer (ELB) native access logging is disabled.\n"
              },
              "help": {
                "text": "Modify the `aws_elb` resource configuration to define and enable the `access_logs` block."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "logging_disabled_terraform_aws_s3_bucket",
              "name": "Sigma Checker logging_disabled_terraform_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 access logging disabled"
              },
              "fullDescription": {
                "text": "AWS S3 server access logging is disabled, preventing auditing of requests made to an S3 bucket.\n"
              },
              "help": {
                "text": "Enable S3 server access logging by configuring the `logging` argument."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "logging_request_parameters_grails",
              "name": "Sigma Checker logging_request_parameters_grails",
              "shortDescription": {
                "text": "Log contains request parameters"
              },
              "fullDescription": {
                "text": "Request parameters are logged. This might lead to capturing sensitive data such as tokens, passwords, etc.\n"
              },
              "help": {
                "text": "Make sure to turn off the `logRequestParameters` feature by setting it to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "markdown_allow_dangerous_html_react",
              "name": "Sigma Checker markdown_allow_dangerous_html_react",
              "shortDescription": {
                "text": "ReactMarkdown used with allowDangerousHtml enabled"
              },
              "fullDescription": {
                "text": "The `allowDangerousHtml` flag is set to `true` which disables the default XSS protection.\n"
              },
              "help": {
                "text": "Make sure the data passed to `ReactMarkdown` renderer is not user-controlled.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "message_encryption_disabled_cloudformation_sns",
              "name": "Sigma Checker message_encryption_disabled_cloudformation_sns",
              "shortDescription": {
                "text": "Amazon Simple Notification Service encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Simple Notification Service (SNS) does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable SNS encryption by explicitly setting the `Properties.KmsMasterKeyId` field.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "message_encryption_disabled_cloudformation_sqs",
              "name": "Sigma Checker message_encryption_disabled_cloudformation_sqs",
              "shortDescription": {
                "text": "Amazon Simple Queue Service encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon Simple Queue Service (SQS) does not have encryption enabled, exposing data at rest.\n"
              },
              "help": {
                "text": "Enable SQS encryption by explicitly setting the `Properties.KmsMasterKeyId` field.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_default_response_object_openapi",
              "name": "Sigma Checker missing_default_response_object_openapi",
              "shortDescription": {
                "text": "Missing default HTTP response"
              },
              "fullDescription": {
                "text": "The API operation does not have a default response object and may encounter an unexpected state resulting in unpredictable behavior, such as returning stack traces or verbose error messages.\n"
              },
              "help": {
                "text": "Audit the operation's configuration for handling unexpected server states. In the OpenAPI spec file, this is configured by a `responses` field with a `default` response object."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_httponly_attribute_postman",
              "name": "Sigma Checker missing_httponly_attribute_postman",
              "shortDescription": {
                "text": "Insecure Cookie Configuration"
              },
              "fullDescription": {
                "text": "The Postman collection contains a cookie object with an insecure configuration.\n"
              },
              "help": {
                "text": "Modify the cookie object so that `HttpOnly` is enabled.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_httponly_attribute_session_cookie_grails",
              "name": "Sigma Checker missing_httponly_attribute_session_cookie_grails",
              "shortDescription": {
                "text": "The session cookies do not have the HttpOnly flag"
              },
              "fullDescription": {
                "text": "The session cookie does not have `httponly` attribute set. An attacker who can execute a cross-site-scripting (XSS) attack can steal this session cookie.\n"
              },
              "help": {
                "text": "Make sure to set the `http-only` flag to `true` in `application.yml`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_httponly_attribute_session_cookie_servlet",
              "name": "Sigma Checker missing_httponly_attribute_session_cookie_servlet",
              "shortDescription": {
                "text": "Missing HttpOnly in session cookie"
              },
              "fullDescription": {
                "text": "The HttpOnly flag is not enabled for the session cookies. Enabling the HttpOnly flag prevents an attacker from stealing or modifying session cookie data via cross-site scripting attacks executed against vulnerable client-side applications.\n"
              },
              "help": {
                "text": "Set the `<http-only>` tag to `true` in the `<cookie-config>`, such as:\n```\n  <session-config>\n    <cookie-config>\n      <http-only>true</http-only>\n    </cookie-config>\n  </session-config>\n```\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_mfa_cloudformation_aws_cognito",
              "name": "Sigma Checker missing_mfa_cloudformation_aws_cognito",
              "shortDescription": {
                "text": "AWS Cognito User Pool without MFA"
              },
              "fullDescription": {
                "text": "The AWS Cognito User Pool does not have multi-factor authentication (MFA) enabled.\n"
              },
              "help": {
                "text": "Enable MFA for the Cognito User Pool by setting the `Properties.MfaConfiguration` value  to `ON` (required for all users) or `OPTIONAL` (required for users with MFA already enabled)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_min_sdk_version_android",
              "name": "Sigma Checker missing_min_sdk_version_android",
              "shortDescription": {
                "text": "Android application supports unsafe SDK versions"
              },
              "fullDescription": {
                "text": "The application supports unsafe Android versions as the `android:minSdkVersion` value is known to be unsafe. Allowing your application to execute on old Android versions is unsafe, as other applications may exploit operating system weaknesses and perform a variety of attacks to your application.\n"
              },
              "help": {
                "text": "Use a known safe `minSdkVersion`, such as 22\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_mtls_consul",
              "name": "Sigma Checker missing_mtls_consul",
              "shortDescription": {
                "text": "Consul server mTLS not enforced"
              },
              "fullDescription": {
                "text": "The Consul server does not require clients to authenticate using mutual TLS.\n"
              },
              "help": {
                "text": "Enable mutual TLS by explicitly setting the `verify_incoming` value to `true`. Additionally, the `verify_incoming_https` and `verify_incoming_rpc` values should be omitted or set to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_mtls_istio_port",
              "name": "Sigma Checker missing_mtls_istio_port",
              "shortDescription": {
                "text": "Istio mTLS Disabled for Port"
              },
              "fullDescription": {
                "text": "Mutual TLS is not enforced for the specified port, allowing any client to call the service directly.\n"
              },
              "help": {
                "text": "Enable mutual TLS by setting the `mode` to `STRICT`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_mtls_istio_service",
              "name": "Sigma Checker missing_mtls_istio_service",
              "shortDescription": {
                "text": "Istio mTLS Disabled for Service-to-Service Communication"
              },
              "fullDescription": {
                "text": "By default Istio will enable mutual TLS for service-to-service communication. However, this protection has been explicitly disabled allowing malicious clients to call services directly and bypass upstream controls.\n"
              },
              "help": {
                "text": "Remove the `meshConfig.enableAutoMtls` field, or explicitly set the value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_mtls_istio_workload",
              "name": "Sigma Checker missing_mtls_istio_workload",
              "shortDescription": {
                "text": "Istio mTLS Disabled for Workload"
              },
              "fullDescription": {
                "text": "Mutual TLS is not enforced for the workload, allowing any client to call the service directly.\n"
              },
              "help": {
                "text": "Enable mutual TLS by setting the `mode` to `STRICT`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_mtls_kafka_broker",
              "name": "Sigma Checker missing_mtls_kafka_broker",
              "shortDescription": {
                "text": "Kafka Broker Mutual TLS Not Enforced"
              },
              "fullDescription": {
                "text": "The Kafka broker does not require clients to authenticate with mutual TLS, indicated by an `ssl.client.auth` value of `none`, `requested`, or undefined.\n"
              },
              "help": {
                "text": "Set the `ssl.client.auth` value to `required` to enforce mutual TLS authentication.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_mtls_rabbitmq",
              "name": "Sigma Checker missing_mtls_rabbitmq",
              "shortDescription": {
                "text": "RabbitMQ mTLS Not Enforced"
              },
              "fullDescription": {
                "text": "The RabbitMQ broker does not enforce mutual TLS, allowing any client to initiate a connection.\n"
              },
              "help": {
                "text": "Configure the RabbitMQ broker to enforce mutual TLS by explicitly setting the options `ssl_options.verify` to `verify_peer` and `ssl_options.fail_if_no_peer_cert` to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_secure_attribute_postman",
              "name": "Sigma Checker missing_secure_attribute_postman",
              "shortDescription": {
                "text": "Insecure Cookie Configuration"
              },
              "fullDescription": {
                "text": "The Postman collection contains a cookie object with an insecure configuration.\n"
              },
              "help": {
                "text": "Modify the cookie object so that `Secure` is enabled.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_secure_attribute_session_cookie_grails",
              "name": "Sigma Checker missing_secure_attribute_session_cookie_grails",
              "shortDescription": {
                "text": "The session cookies do not have the secure flag"
              },
              "fullDescription": {
                "text": "The session cookie does not have the `secure` attribute set. Web browsers send cookies without the `secure` attribute over HTTP. If an attacker can fool the victim’s browser into sending an HTTP request to the vulnerable site (for example, with JavaScript code on a malicious page or with a phishing link), the victim’s browser will send the vulnerable cookie in clear text. If the attacker can also intercept this network traffic, then they can steal the victim’s session cookie and impersonate the victim.\n"
              },
              "help": {
                "text": "Make sure to set the `secure` flag to `true` in `application.yml`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_security_constraint_jsf2",
              "name": "Sigma Checker missing_security_constraint_jsf2",
              "shortDescription": {
                "text": "Missing Facelet security constraint"
              },
              "fullDescription": {
                "text": "The JSF2 web application does not define a security constraint that restricts access to Facelet source code which can then be disclosed to unauthorized users.\n"
              },
              "help": {
                "text": "Ensure that the Facelets (XHTML files) cannot be accessed:\n```\n<security-constraint>\n    <display-name>Protection of Facelet sources</display-name>\n    <web-resource-collection>\n        <web-resource-name>XHTML</web-resource-name>\n        <url-pattern>*.xhtml</url-pattern>\n    </web-resource-collection>\n    <auth-constraint />\n</security-constraint>\n```\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_servlet_mapping_servlet",
              "name": "Sigma Checker missing_servlet_mapping_servlet",
              "shortDescription": {
                "text": "Missing Servlet mapping"
              },
              "fullDescription": {
                "text": "The deployment descriptor XML configuration file contains a servlet entry without a corresponding `<servlet-mapping>` tag. Such unmapped servlet will be mapped implicitly. In the case of implicit mapping, any servlet in the classpath or even inside a `.jar` could be invoked directly, introducing a security risk.\n"
              },
              "help": {
                "text": "Add an explicit `<servlet-mapping>` tag for the servlet entry.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_target_sdk_version_android",
              "name": "Sigma Checker missing_target_sdk_version_android",
              "shortDescription": {
                "text": "Android application does not target the latest Android version"
              },
              "fullDescription": {
                "text": "The application does not target the latest version of the Android operating system as the `android:targetSdkVersion` attribute of the `<uses-sdk>` element is not set. Applications targeting older Android versions do not take advantage of several security features and improvements introduced on later Android versions.\n"
              },
              "help": {
                "text": "Set the `android:targetSdkVersion` attribute to the most recent Android API level.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_api_endpoint_openapi_v2",
              "name": "Sigma Checker missing_tls_api_endpoint_openapi_v2",
              "shortDescription": {
                "text": "Missing TLS encryption for API server"
              },
              "fullDescription": {
                "text": "The API server uses the insecure `http://` or `ws://` protocols. API data is then transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the API to use TLS. This is configured by removing the insecure `http://` or `ws://` protocols from the global `schemes` array."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_api_endpoint_openapi_v3",
              "name": "Sigma Checker missing_tls_api_endpoint_openapi_v3",
              "shortDescription": {
                "text": "Missing TLS encryption for API server"
              },
              "fullDescription": {
                "text": "The API server uses the insecure `http://` or `ws://` protocols. API data is then transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the API to use TLS. This is configured by modifying the `url` field in the global `servers` object to use the `https://` or `wss://` protocol."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_cloudformation_cloudfront",
              "name": "Sigma Checker missing_tls_cloudformation_cloudfront",
              "shortDescription": {
                "text": "CloudFront distribution HTTPS not enforced"
              },
              "fullDescription": {
                "text": "The CloudFront distribution has a `ViewerProtocolPolicy` set to `allow-all` which supports both `HTTP` and `HTTPS` requests.\n"
              },
              "help": {
                "text": "Set the `ViewerProtocolPolicy` value to `https-only` or `redirect-to-https` to force `HTTPS` connections.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_cloudformation_doc_db",
              "name": "Sigma Checker missing_tls_cloudformation_doc_db",
              "shortDescription": {
                "text": "Amazon Document DB TLS disabled"
              },
              "fullDescription": {
                "text": "The Amazon Document DB instances have TLS disabled via the cluster parameter group.\n"
              },
              "help": {
                "text": "Enable TLS by either removing the `Properties.Parameters.tls` field or explicitly setting the value to `enabled`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_cloudformation_elastic_cache",
              "name": "Sigma Checker missing_tls_cloudformation_elastic_cache",
              "shortDescription": {
                "text": "Amazon ElasticCache in-transit encryption not enabled"
              },
              "fullDescription": {
                "text": "The Amazon ElasticCache Redis instance does not have in-transit encryption enabled, exposing data as it is travels between nodes or to and from the application.\n"
              },
              "help": {
                "text": "Explicitly enable in-transit encryption by setting the `Properties.TransitEncryptionEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_cloudformation_elastic_search",
              "name": "Sigma Checker missing_tls_cloudformation_elastic_search",
              "shortDescription": {
                "text": "Amazon ElasticSearch HTTPS not enforced"
              },
              "fullDescription": {
                "text": "The Amazon Elasticsearch Service (Amazon ES) domain does not enforce HTTPS connections, exposing data in transit.\n"
              },
              "help": {
                "text": "Explicitly set the `Properties.DomainEndpointOptions.EnforceHTTPS` value to `true` to require HTTPS for all connections.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_cloudformation_load_balancer",
              "name": "Sigma Checker missing_tls_cloudformation_load_balancer",
              "shortDescription": {
                "text": "AWS Load Balancer HTTPS not enforced"
              },
              "fullDescription": {
                "text": "The AWS Load Balancer Listener supports HTTP connections, indicated by the `Protocol` value `HTTP`.\n"
              },
              "help": {
                "text": "Configure the load balancer to force HTTPS connections by changing the `Protocol` value to `HTTPS` or configuring the listener's `DefaultActions` to redirect HTTP requests to an HTTPS listener.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_cloudformation_load_balancer_classic",
              "name": "Sigma Checker missing_tls_cloudformation_load_balancer_classic",
              "shortDescription": {
                "text": "AWS Classic Load Balancer HTTPS not enforced"
              },
              "fullDescription": {
                "text": "The AWS Classic Load Balancer supports HTTP connections, indicated by the `Listeners.Protocol` value `HTTP`.\n"
              },
              "help": {
                "text": "Configure the load balancer to force HTTPS connections by changing the `Listeners.Protocol` to `HTTPS`.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_consul",
              "name": "Sigma Checker missing_tls_consul",
              "shortDescription": {
                "text": "Consul server TLS disabled"
              },
              "fullDescription": {
                "text": "The Consul server has TLS support disabled.\n"
              },
              "help": {
                "text": "Enable TLS support by explicitly setting the `auto_encrypt.allow_tls` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_consul_client",
              "name": "Sigma Checker missing_tls_consul_client",
              "shortDescription": {
                "text": "Consul client TLS disabled"
              },
              "fullDescription": {
                "text": "The Consul agent initiates non-TLS requests.\n"
              },
              "help": {
                "text": "Configure the agent to initiate TLS-protected connections by explicitly setting the `verify_outgoing` option to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_kafka_broker",
              "name": "Sigma Checker missing_tls_kafka_broker",
              "shortDescription": {
                "text": "Kafka Interbroker Plaintext Configuration"
              },
              "fullDescription": {
                "text": "The Kafka server is configured to the plaintext protocol for broker-to-broker communication, exposing data in transit.\n"
              },
              "help": {
                "text": "Enable TLS protections for broker-to-broker communication by explicitly setting the `security.inter.broker.protocol` value to `SSL` or `SASL_SSL`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_kafka_client",
              "name": "Sigma Checker missing_tls_kafka_client",
              "shortDescription": {
                "text": "Kafka Client Plaintext Communication"
              },
              "fullDescription": {
                "text": "The Kafka client is configured to communicate with the broker via the plaintext protocol, exposing data in transit.\n"
              },
              "help": {
                "text": "Configure client-broker communication to use the TLS protocol by setting the `security.protocol` value to `SSL` or `SASL_SSL`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_kafka_listener",
              "name": "Sigma Checker missing_tls_kafka_listener",
              "shortDescription": {
                "text": "Kafka Plaintext Listener Enabled"
              },
              "fullDescription": {
                "text": "The Kafka broker supports plaintext communication, exposing data in transit.\n"
              },
              "help": {
                "text": "Enforce TLS communication by removing the `PLAINTEXT://`, `SASL_PLAINTEXT://`, and `http://` protocols from the `listeners` and by using only the `SSL://`, `SASL_SSL://`, and 'https://` protocols.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_node_to_node_cloudformation_elastic_search",
              "name": "Sigma Checker missing_tls_node_to_node_cloudformation_elastic_search",
              "shortDescription": {
                "text": "Amazon ElasticSearch missing node-to-node encryption"
              },
              "fullDescription": {
                "text": "The Amazon Elasticsearch Service (Amazon ES) domain does not use TLS for node-to-node encryption within the VPC.\n"
              },
              "help": {
                "text": "Enable node-to-node encryption by explicitly setting the `Properties.NodeToNodeEncryptionOptions.Enabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_oauth2_endpoint_openapi",
              "name": "Sigma Checker missing_tls_oauth2_endpoint_openapi",
              "shortDescription": {
                "text": "Missing TLS encryption for OAuth2 server"
              },
              "fullDescription": {
                "text": "The OAuth2 endpoint leveraged by the API uses the insecure `http://` protocol. Sensitive data is then transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the API to use an OAuth2 authorization server that supports TLS. This is configured by modifying the OAuth2 security scheme to have an `authorizationUrl` or `tokenUrl` value that uses the `https://` protocol.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_openapi_x_a127",
              "name": "Sigma Checker missing_tls_openapi_x_a127",
              "shortDescription": {
                "text": "Missing TLS encryption for Apigee OAuth2 server"
              },
              "fullDescription": {
                "text": "The Apigee text integration object uses an OAuth2 server with the `http://` protocol. API specification data is then transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the API to use an OAuth2 authorization server that supports TLS. This is configured by an `x-a127-services.oauth2.options.uri` value that uses the `https://` scheme."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_openapi_x_amazon_apigateway_integration",
              "name": "Sigma Checker missing_tls_openapi_x_amazon_apigateway_integration",
              "shortDescription": {
                "text": "Missing TLS encryption for Amazon backend service"
              },
              "fullDescription": {
                "text": "The Amazon backend service uses the http:// scheme. API data is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Make sure your URL is using a secure channel"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_openapi_x_google_backend",
              "name": "Sigma Checker missing_tls_openapi_x_google_backend",
              "shortDescription": {
                "text": "Missing TLS encryption for Google backend service"
              },
              "fullDescription": {
                "text": "The Google backend service uses the `http://` scheme. API data is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the Google backend to use TLS. This is configured by an `x-google-backend.address` value that uses the `https://` scheme."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_openapi_x_google_jwks",
              "name": "Sigma Checker missing_tls_openapi_x_google_jwks",
              "shortDescription": {
                "text": "Missing TLS encryption for JWKS server"
              },
              "fullDescription": {
                "text": "The JSON Web Key Set server uses the `http://` scheme. The sensitive JSON Web Key Set used to validate the JSON Web Token signature is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the API to retrieve the JWKS over an encrypted TLS connection. This is configured by a field value that uses the `https://` scheme."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "missing_tls_openapi_x_servers",
              "name": "Sigma Checker missing_tls_openapi_x_servers",
              "shortDescription": {
                "text": "Missing TLS encryption for SAP server"
              },
              "fullDescription": {
                "text": "The SAP server uses the `http://` scheme. API data is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure the SAP server to use TLS. This is configured by an `x-servers` object where the value uses the `https://` scheme."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_postman",
              "name": "Sigma Checker missing_tls_postman",
              "shortDescription": {
                "text": "API Endpoint Uses HTTP Protocol"
              },
              "fullDescription": {
                "text": "The Postman request references an endpoint that uses the HTTP protocol.\n"
              },
              "help": {
                "text": "Configure the API endpoint and the Postman request to use HTTPS.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_ref_endpoint_openapi",
              "name": "Sigma Checker missing_tls_ref_endpoint_openapi",
              "shortDescription": {
                "text": "Missing TLS encryption for reference server"
              },
              "fullDescription": {
                "text": "The text spec file loads an external reference via the insecure `http://` protocol. API specification data is then transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Configure OpenAPI external reference URLs to use the https:// protocol. This is configured by modifying the field to use the `https://` protocol."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_sequelize",
              "name": "Sigma Checker missing_tls_sequelize",
              "shortDescription": {
                "text": "Connection to the database without SSL"
              },
              "fullDescription": {
                "text": "The sequelize module sets the `ssl` option to `false`, which is the default value. With that setting `sequelize` establishes an unencrypted connection between the database and the server. This may result in leaking sensitive data since every query is transmitted over an insecure channel. \n"
              },
              "help": {
                "text": "Turn on the SSL encryption for the database by setting `ssl` to `true` and configuring other SSL properties.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_spring_boot",
              "name": "Sigma Checker missing_tls_spring_boot",
              "shortDescription": {
                "text": "Spring Boot SSL disabled"
              },
              "fullDescription": {
                "text": "The Spring Boot application is configured to disable SSL. Sensitive data is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "Enable SSL by setting spring.couchbase.env.ssl.enabled to `true`, or omit it as the default value (`true`),"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_spring_boot_couchbase",
              "name": "Sigma Checker missing_tls_spring_boot_couchbase",
              "shortDescription": {
                "text": "Spring Boot Couchbase SSL support is disabled"
              },
              "fullDescription": {
                "text": "The Spring Boot Couchbase configuration setting for SSL support is explicitly disabled. Sensitive data is transmitted over an insecure communication channel and can be read and modified by attackers.\n"
              },
              "help": {
                "text": "In production, set the property to `true`.  Note that the default value will be `true` if the property is omitted and a Couchbase key-store is provided.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_terraform_aws_cloudfront",
              "name": "Sigma Checker missing_tls_terraform_aws_cloudfront",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The AWS CloudFront instance accepts unprotected HTTP connections allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure AWS CloudFront to only support TLS-protected HTTPS connections by explicitly setting the resource's `viewer_protocol_policy` value to either `https-only` or `redirect-to-https`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_aws_docdb",
              "name": "Sigma Checker missing_tls_terraform_aws_docdb",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The AWS DocumentDB cluster accepts unprotected HTTP connections, allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the AWS DocumentDB cluster to only support TLS-protected HTTPS connections by setting the resource's `tls` parameter to `enabled`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_aws_load_balancer",
              "name": "Sigma Checker missing_tls_terraform_aws_load_balancer",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The AWS load balancer accepts unprotected HTTP connections allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the AWS load balancer to only support TLS-protected HTTPS connections by explicitly setting the resource's `protocol` value to `HTTPS` or by setting the `default_action.redirect.protocol` value to `HTTPS`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_azurerm_app_service",
              "name": "Sigma Checker missing_tls_terraform_azurerm_app_service",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The Azure App Service accepts unprotected HTTP connections, allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the Azure App Service to only support TLS-protected HTTPS connections by explicitly setting the resource's `https_only` value to `true`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_azurerm_mysql",
              "name": "Sigma Checker missing_tls_terraform_azurerm_mysql",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The Azure MySQL server accepts unprotected HTTP connections allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the Azure MySQL server to only support TLS-protected HTTPS connections by explicitly setting the resource's `ssl_enforcement_enabled` value to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "missing_tls_terraform_azurerm_postgresql",
              "name": "Sigma Checker missing_tls_terraform_azurerm_postgresql",
              "shortDescription": {
                "text": "missing_tls_terraform_azurerm_postgresql"
              },
              "fullDescription": {
                "text": "The Azure PostgreSQL server accepts unprotected HTTP connections, allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the Azure PostgreSQL server to only support TLS-protected HTTPS connections by explicitly setting the resource's `ssl_enforcement_enabled` value to `true`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_azurerm_storage_account",
              "name": "Sigma Checker missing_tls_terraform_azurerm_storage_account",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The Azure storage account accepts unprotected HTTP connections, allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the Azure storage account to only support TLS-protected HTTPS connections by setting the resource's `enable_https_traffic_only` value to `true` (i.e. the default value)."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_tls_terraform_google_sql_db",
              "name": "Sigma Checker missing_tls_terraform_google_sql_db",
              "shortDescription": {
                "text": "Missing TLS"
              },
              "fullDescription": {
                "text": "The Google SQL database accepts unprotected HTTP connections allowing any attacker on the network to perform man-in-the-middle attacks.\n"
              },
              "help": {
                "text": "Configure the Google SQL database to only support TLS-protected HTTPS connections by explicitly setting the resource's `settings.ip_configuration.require_ssl` value to `true`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "missing_uses_sdk_version_android",
              "name": "Sigma Checker missing_uses_sdk_version_android",
              "shortDescription": {
                "text": "Android application does not target the latest Android version"
              },
              "fullDescription": {
                "text": "The application is not configured to target the latest Android operating system version since the `<uses-sdk>` element is not set. Applications targeting older Android versions do not take advantage of several security features and improvements introduced on later Android versions.\n"
              },
              "help": {
                "text": "Add a `<uses-sdk>` element and specify the `android:targetSdkVersion` attribute.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "no_password_change_on_first_login_cloudformation_aws_iam",
              "name": "Sigma Checker no_password_change_on_first_login_cloudformation_aws_iam",
              "shortDescription": {
                "text": "AWS IAM User password reset not required"
              },
              "fullDescription": {
                "text": "The AWS IAM user is initialized with a password that is not required  to be changed on first login.\n"
              },
              "help": {
                "text": "Set the `Properties.LoginProfile.PasswordResetRequired` value to `true`  to force a password change on first login."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "no_rate_limiting_openapi",
              "name": "Sigma Checker no_rate_limiting_openapi",
              "shortDescription": {
                "text": "Missing rate limiting"
              },
              "fullDescription": {
                "text": "The text spec file defines an operation that does not include a '429 Too Many Requests' response object, indicating no rate limiting. An attacker can submit a large number of request over a short period of time to exhaust API resources or facilitate brute force attacks.\n"
              },
              "help": {
                "text": "Audit the use of rate limiting controls. This is configured by including a `429 Too Many Requests` or similar response object."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "non_production_api_endpoint_openapi_v2",
              "name": "Sigma Checker non_production_api_endpoint_openapi_v2",
              "shortDescription": {
                "text": "Non-production endpoint detected"
              },
              "fullDescription": {
                "text": "The text `host` or `basePath` field indicates a non-production API instance (e.g., `qa`, `dev`, `test`, etc.). Non-production API instances may expose test functionality or lack security controls.\n"
              },
              "help": {
                "text": "Audit the business justification for exposing a non-production API instance."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "non_production_api_endpoint_openapi_v3",
              "name": "Sigma Checker non_production_api_endpoint_openapi_v3",
              "shortDescription": {
                "text": "Non-production endpoint detected"
              },
              "fullDescription": {
                "text": "The text `servers.Url` field indicates a non-production API instance (e.g., `qa`, `dev`, `test`, etc.). Non-production API instances may expose test functionality or lack security controls.\n"
              },
              "help": {
                "text": "Audit the business justification for exposing a non-production API instance."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "non_production_route_openapi",
              "name": "Sigma Checker non_production_route_openapi",
              "shortDescription": {
                "text": "Test route detected"
              },
              "fullDescription": {
                "text": "The API path name indicates a test operation which may expose unnecessary functionality or lack security controls.\n"
              },
              "help": {
                "text": "Verify whether there exists a business justification for exposing test operations."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "oauth2_pkce_plaintext_challenge_postman",
              "name": "Sigma Checker oauth2_pkce_plaintext_challenge_postman",
              "shortDescription": {
                "text": "API Endpoint Uses OAuth PKCE With Plaintext Challenge"
              },
              "fullDescription": {
                "text": "The Postman collection uses an OAuth authorization code flow with proof-key for code exchange (PKCE) where the challenge is a plaintext value. As a result, the value might be intercepted and replayed to the OAuth authorization server.\n"
              },
              "help": {
                "text": "Configure the OAuth authorization server to only accept PKCE codes in the form of a SHA-256 hash. In the Postman collection, the `code_challenge_method` should be updated to `s256`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "outdated_target_sdk_version_android",
              "name": "Sigma Checker outdated_target_sdk_version_android",
              "shortDescription": {
                "text": "Android application does not target the latest Android version"
              },
              "fullDescription": {
                "text": "The application is not configured to target the latest Android operating system version, as is best practice. Applications targeting older Android versions do not take advantage of several security features and improvements introduced on later Android versions.\n"
              },
              "help": {
                "text": "Set the `android:targetSdkVersion` attribute to the most recent Android API."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "password_change_without_old_password_openapi",
              "name": "Sigma Checker password_change_without_old_password_openapi",
              "shortDescription": {
                "text": "Unsafe password change"
              },
              "fullDescription": {
                "text": "The password changing operation does not require the old password or a password reset token. A compromised access token or session ID may be used to change the user's password resulting in persistent access.\n"
              },
              "help": {
                "text": "Modify the password change operation to require either the old password or a password reset token. This is configured by including the old password or password reset token parameters in the `schema.properties` field of the request body."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "permissive_intent_list_cordova",
              "name": "Sigma Checker permissive_intent_list_cordova",
              "shortDescription": {
                "text": "Insecure configuration of Cordova Intent Whitelist"
              },
              "fullDescription": {
                "text": "The Cordova whitelist plugin is configured to allow all unrecognized URLs to be handled by other applications on the device. Allowing unrecognized URLs to be handled by other applications on the device may result in information leakage or phishing attacks.\n"
              },
              "help": {
                "text": "Configure the `<allow-intent>` regex so that only specific types of URLs, such as `http://`, `https://`, `sms:`, `geo:`, and `tel:` are handled by other applications on the device.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "permissive_navigation_list_cordova",
              "name": "Sigma Checker permissive_navigation_list_cordova",
              "shortDescription": {
                "text": "Insecure configuration of Cordova Intent Whitelist"
              },
              "fullDescription": {
                "text": "The Cordova whitelist plugin is configured to allow the WebView to navigate to any URL without restrictions. Allowing untrusted URLs to be opened by the application's WebView may result in malicious Javascript code being executed within the context of the application, or a phishing page to be presented to the user.\n"
              },
              "help": {
                "text": "Configure the `<allow-navigation>` regex so that the WebView is allowed to navigate only to specific URLs.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "permissive_network_list_cordova",
              "name": "Sigma Checker permissive_network_list_cordova",
              "shortDescription": {
                "text": "Insecure configuration of Cordova Intent Whitelist"
              },
              "fullDescription": {
                "text": "The Cordova whitelist plugin is configured to allow outbound network requests to all domains. Allowing outbound network requests to any domain without restrictions may result in the execution of malicious JavaScript code or a phishing page to be presented to the user.\n"
              },
              "help": {
                "text": "Configure the `<access origin>` regex so that the system only allows outbound network requests to specific URLs. Alternatively use a strict Content Security Policy within the HTML page loaded in the WebView.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "plaintext_storage_sensitive_data_kubernetes",
              "name": "Sigma Checker plaintext_storage_sensitive_data_kubernetes",
              "shortDescription": {
                "text": "Kubernetes data encryption disabled"
              },
              "fullDescription": {
                "text": "The first provider listed in the Kubernetes `EncryptionConfiguration` configuration is used to encrypt data saved to storage. All subsequent providers are only used to decrypt existing data. This configuration has `identity` as the first provider, which provides no encryption and stores data as-is.\n"
              },
              "help": {
                "text": "Modify the `EncryptionConfiguration` so that `identity` is not the first provider listed in the `providers` array."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "privileged_container_allowed_kubernetes",
              "name": "Sigma Checker privileged_container_allowed_kubernetes",
              "shortDescription": {
                "text": "Kubernetes container with privileged security context"
              },
              "fullDescription": {
                "text": "The Kubernetes container has a privileged security context, disabling most security mechanisms and allowing known privilege escalation attacks.\n"
              },
              "help": {
                "text": "Remove the `securityContext.privileged` field or explicitly set the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "project_encryption_disabled_cloudformation_codebuild",
              "name": "Sigma Checker project_encryption_disabled_cloudformation_codebuild",
              "shortDescription": {
                "text": "Amazon CodeBuild project encryption disabled"
              },
              "fullDescription": {
                "text": "The Amazon CodeBuild project has encryption disabled.\n"
              },
              "help": {
                "text": "Enable encryption for the CodeBuild project by removing the `Properties.Artifacts.EncryptionDisabled` field or by explicitly setting the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "project_encryption_disabled_terraform_aws_codebuild",
              "name": "Sigma Checker project_encryption_disabled_terraform_aws_codebuild",
              "shortDescription": {
                "text": "AWS CodeBuild project encryption is disabled"
              },
              "fullDescription": {
                "text": "The Terraform configuration disables AWS CodeBuild project encryption.\n"
              },
              "help": {
                "text": "Remove or set to false the `resource / (artifacts|secondary_artifacts|s3_logs) / encryption_disabled` element."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "public_github_repository_terraform",
              "name": "Sigma Checker public_github_repository_terraform",
              "shortDescription": {
                "text": "Public Github repository"
              },
              "fullDescription": {
                "text": "The GitHub repository is publicly accessible, exposing source code and other sensitive data.\n"
              },
              "help": {
                "text": "GitHub repositories are `public` by default. The `private` field should be explicitly set to `true`. The `visibility` field overrides the `private` field and should be omitted or set to a value other than `public`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "query_encryption_disabled_terraform_aws_athena",
              "name": "Sigma Checker query_encryption_disabled_terraform_aws_athena",
              "shortDescription": {
                "text": "AWS Athena query encryption is not enforced"
              },
              "fullDescription": {
                "text": "The Terraform configuration does not enforce AWS Athena query encryption.\n"
              },
              "help": {
                "text": "Set the `resource.configuration.enforce_workgroup_configuration` element to `true` and use the `resource.configuration.result_configuration.encryption_configuration` element to specify the encryption options."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "query_logging_enabled_sequelize",
              "name": "Sigma Checker query_logging_enabled_sequelize",
              "shortDescription": {
                "text": "Logging of SQL queries enabled with Sequelize"
              },
              "fullDescription": {
                "text": "The `sequelize` module sets the logging option to `console.log`, which is the default value. With that setting `sequelize` logs every query to the console. This might result in leaking sensitive data since console outputs are often streamed to log files when the application is deployed.\n"
              },
              "help": {
                "text": "Turn off the logging functionality by setting `logging` to `false`, or use a custom function that performs filtering and masking of sensitive data before writing it to a log file.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "remote_access_via_guest_account_rabbitmq_default_mqtt",
              "name": "Sigma Checker remote_access_via_guest_account_rabbitmq_default_mqtt",
              "shortDescription": {
                "text": "RabbitMQ Uses Default MQTT TCP Listener"
              },
              "fullDescription": {
                "text": "The RabbitMQ MQTT configuration does not specify a TCP listener. As a result, the default listener will bind to port 1883 on all interfaces and allow connections using the default credentials `guest/guest`.\n"
              },
              "help": {
                "text": "Configure the RabbitMQ MQTT TCP listener by defining the `mqtt.listeners.tcp.1` option.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "remote_access_via_guest_account_rabbitmq_loopback_users",
              "name": "Sigma Checker remote_access_via_guest_account_rabbitmq_loopback_users",
              "shortDescription": {
                "text": "RabbitMQ Remote Access via Default Guest Account"
              },
              "fullDescription": {
                "text": "By default, the `guest` account can only connect via the localhost interface. However, either the `loopback_users` option is set to `none` or the `loopback_users.guest` option is set to `false`, allowing remote users to connect with the `guest` account.\n"
              },
              "help": {
                "text": "Configure the RabbitMQ broker to only allow `guest` connections via the localhost interface. To do this, avoid setting the `loopback_users` option to `none`, and avoid setting the `loopback_users.guest` option to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "remote_execution_enabled_consul",
              "name": "Sigma Checker remote_execution_enabled_consul",
              "shortDescription": {
                "text": "Consul remote execution enabled"
              },
              "fullDescription": {
                "text": "The Consul remote execution feature is enabled. This feature increases the impact of compromised credentials or improper ACLs.\n"
              },
              "help": {
                "text": "Disable remote execution by removing the `disable_remote_exec` option or explicitly setting the value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "request_allows_any_media_type_openapi",
              "name": "Sigma Checker request_allows_any_media_type_openapi",
              "shortDescription": {
                "text": "Operation accepts arbitrary media types"
              },
              "fullDescription": {
                "text": "The API fails to restrict the media type in the request body. It will accept arbitrary content types which may cause the API to behave unexpectedly.\n"
              },
              "help": {
                "text": "Audit the API configuration for the request body media type validation. This is configured by removing the `*/*` property from the `requestBody.content` object."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "request_logging_enabled_spring_boot",
              "name": "Sigma Checker request_logging_enabled_spring_boot",
              "shortDescription": {
                "text": "Spring Boot logging request details"
              },
              "fullDescription": {
                "text": "The Spring Boot is configured to log HTTP request details. Storing sensitive information in log files may lead to financial loss or reputation damage and assist attackers in gaining access to systems via information exposure.\n"
              },
              "help": {
                "text": "Set the `log-request-details` property to `false` or omit it as the default value is `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "request_tracing_disabled_cloudformation_lambda",
              "name": "Sigma Checker request_tracing_disabled_cloudformation_lambda",
              "shortDescription": {
                "text": "Lambda Function X-Ray Tracing disabled"
              },
              "fullDescription": {
                "text": "The Amazon Lambda function does not have AWS X-Ray tracing enabled, making it difficult to troubleshoot and audit downstream requests.\n"
              },
              "help": {
                "text": "Enable AWS X-Ray tracing by setting the `TracingConfig.Mode` value to `Active`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "request_tracing_disabled_istio",
              "name": "Sigma Checker request_tracing_disabled_istio",
              "shortDescription": {
                "text": "Istio Request Tracing Disabled"
              },
              "fullDescription": {
                "text": "Istio request tracing is disabled, preventing downstream service requests from being linked back to the original request. Without request tracing, it is difficult to conduct performance and debugging analysis or to attribute malicious service calls.\n"
              },
              "help": {
                "text": "Enable request tracing by explicitly setting the `meshConfig.enableTracing` value to `true`. Note that once enabled, request tracing will also require a trace span collector defined in the proxy configuration.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "request_tracing_disabled_terraform_aws_api_gateway",
              "name": "Sigma Checker request_tracing_disabled_terraform_aws_api_gateway",
              "shortDescription": {
                "text": "AWS API Gateway X-Ray tracing disabled"
              },
              "fullDescription": {
                "text": "The AWS API Gateway has X-Ray tracing disabled, preventing end-to-end auditing of requests across downstream APIs.\n"
              },
              "help": {
                "text": "Enable X-Ray tracing by explicitly setting the `xray_tracing_enabled` value to `true`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "reverse_tabnabbing_react",
              "name": "Sigma Checker reverse_tabnabbing_react",
              "shortDescription": {
                "text": "Redirecting main site from third-party link"
              },
              "fullDescription": {
                "text": "The anchor tag is generated dynamically and sets the `target` attribute to `_blank`. The page opened from that link will have access to the `location` object of the original page through `window.opener.location`. A malicious page associated with this link will be able to navigate the original page to an arbitrary site, such as a phishing site, and thus, execute a reverse tabnabbing attack.\n"
              },
              "help": {
                "text": "Set the `rel` attribute to `noopener`, thus disallowing the linked page to access the original page through the `window.opener` object.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sasl_plain_enabled_kafka_broker",
              "name": "Sigma Checker sasl_plain_enabled_kafka_broker",
              "shortDescription": {
                "text": "Kafka Broker Credentials Exposed Via SASL/PLAIN"
              },
              "fullDescription": {
                "text": "The Kafka broker is configured to use the SASL/PLAIN authentication mechanism, which requires clients to send plaintext credentials across the network and prevents adequate token/credential rotation.\n"
              },
              "help": {
                "text": "Configure the broker to use the GSSAPI, SCRAM, or OAUTHBEARER mechanisms which authorize requests using a ticket, password hash, or access token rather than plaintext credentials.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "sasl_plain_enabled_kafka_client",
              "name": "Sigma Checker sasl_plain_enabled_kafka_client",
              "shortDescription": {
                "text": "Kafka Client Credentials Exposed Via SASL/PLAIN"
              },
              "fullDescription": {
                "text": "The Kafka client is configured to use the SASL/PLAIN authentication mechanism, which requires it to send plaintext credentials across the network and prevents adequate token/credential rotation.\n"
              },
              "help": {
                "text": "Configure both the client and broker to use the GSSAPI, SCRAM, or OAUTHBEARER mechanisms which authorize requests using a ticket, password hash, or access token rather than plaintext credentials.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "script_checks_enabled_consul",
              "name": "Sigma Checker script_checks_enabled_consul",
              "shortDescription": {
                "text": "Consul script checks enabled"
              },
              "fullDescription": {
                "text": "Script checks are enabled which can, in some Consul configurations, introduce a remote code execution vulnerability targeted by known malware.\n"
              },
              "help": {
                "text": "Disable remote script checks by removing the `enable_script_checks` option or by explicitly setting the value to `false`. Note that the option `enable_local_script_checks` is a more secure alternative if script checks are required.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "secrets_in_custom_data_terraform_azurerm_vm",
              "name": "Sigma Checker secrets_in_custom_data_terraform_azurerm_vm",
              "shortDescription": {
                "text": "Azure secrets in VM customData"
              },
              "fullDescription": {
                "text": "Sensitive data is stored in the Azure VM customData field. Data stored in this field is only Base64 encoded and is accessible to anyone with access to the VM.\n"
              },
              "help": {
                "text": "Remove all secrets and sensitive data (i.e. passwords, keys, tokens, etc.) from the Azure VM customData field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "secrets_in_env_vars_kubernetes",
              "name": "Sigma Checker secrets_in_env_vars_kubernetes",
              "shortDescription": {
                "text": "Kubernetes secrets leaked via environmental variables"
              },
              "fullDescription": {
                "text": "The Kubernetes container initializes sensitive data as environmental variables, which are available as plain-text at run-time and in system logs.\n"
              },
              "help": {
                "text": "Remove all sensitive data from the container's `env` object. Any sensitive data should be stored as a Kubernetes `Secret` type."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "secrets_in_env_vars_terraform_aws_lambda",
              "name": "Sigma Checker secrets_in_env_vars_terraform_aws_lambda",
              "shortDescription": {
                "text": "Secrets stored in Lambda variables"
              },
              "fullDescription": {
                "text": "Sensitive data is stored in AWS Lambda environment variables. This data is unencrypted and exposed to any user with basic read-metadata-only permissions.\n"
              },
              "help": {
                "text": "Remove any sensitive data from Lambda environment variables."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "secrets_in_user_data_terraform_aws_ec2",
              "name": "Sigma Checker secrets_in_user_data_terraform_aws_ec2",
              "shortDescription": {
                "text": "Secrets stored in EC2 user data"
              },
              "fullDescription": {
                "text": "Sensitive data is stored in the AWS EC2 `user_data` field. This data is stored unencrypted and is exposed to any user with basic access to the EC2 instance.\n"
              },
              "help": {
                "text": "Remove all sensitive data from the AWS EC2 `user_data` field."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "selinux_default_configuration_override_kubernetes",
              "name": "Sigma Checker selinux_default_configuration_override_kubernetes",
              "shortDescription": {
                "text": "SELinux configuration override"
              },
              "fullDescription": {
                "text": "The Kubernetes container's SELinux protections have been loosened via the `securityContext.seLinuxOptions` field.\n"
              },
              "help": {
                "text": "Modify the container spec to use the default SELinux options by removing the `seLinuxOptions` field."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sensitive_data_in_query_string_openapi",
              "name": "Sigma Checker sensitive_data_in_query_string_openapi",
              "shortDescription": {
                "text": "Sensitive data in URI"
              },
              "fullDescription": {
                "text": "The API operation accepts sensitive data in the request URI which may leak that data to an attacker through proxy logs, browser history, or other means.\n"
              },
              "help": {
                "text": "Audit the operation to only accept the sensitive value in an HTTP header or the request body. In the OpenAPI spec file, this is configured by changing the `in` field of the sensitive value to one of the following: `header`, `body`, `formData`, `cookie`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sensitive_data_in_query_string_spring_security",
              "name": "Sigma Checker sensitive_data_in_query_string_spring_security",
              "shortDescription": {
                "text": "Session identifier passed in URL query strings"
              },
              "fullDescription": {
                "text": "The session identifier is passed in URL query strings and may be leaked through proxy logs, browser history, Referer headers, and other means.\n"
              },
              "help": {
                "text": "Set the `tracking-mode` property to `\"COOKIE\"` or `\"SSL\"`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sensitive_data_in_response_openapi",
              "name": "Sigma Checker sensitive_data_in_response_openapi",
              "shortDescription": {
                "text": "Sensitive data in response"
              },
              "fullDescription": {
                "text": "The API operation returns sensitive data in the HTTP response which may be unnecessarily exposed to the client.\n"
              },
              "help": {
                "text": "Audit the operation to determine whether there exists a business justification for returning the sensitive data.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "server_exception_info_leak_spring_boot",
              "name": "Sigma Checker server_exception_info_leak_spring_boot",
              "shortDescription": {
                "text": "Spring Boot displaying exception information"
              },
              "fullDescription": {
                "text": "The Spring Boot application is configured to allow exception information to be displayed in an error page which may assist attackers in gaining unauthorized access to the system.\n"
              },
              "help": {
                "text": "In production, set the parameter of the function `setIncludeException` to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "session_fixation_protection_disabled_spring_security",
              "name": "Sigma Checker session_fixation_protection_disabled_spring_security",
              "shortDescription": {
                "text": "Disabled Spring Security session fixation protection"
              },
              "fullDescription": {
                "text": "The Spring Security session fixation protection is disabled. An attacker may preset the session id before the user logs in, and then abuse the active session after the login, if the session fixation protection is disabled.\n"
              },
              "help": {
                "text": "Enable the Spring Security session fixation protection by omitting the invocation of `sessionFixation().none()`. In addition, it is possible to invoke `sessionFixation().newSession()`, `sessionFixation().migrateSession()` or `sessionFixation().changeSessionId()`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "shared_preferences_data_exposure_android",
              "name": "Sigma Checker shared_preferences_data_exposure_android",
              "shortDescription": {
                "text": "Insufficient protection of data"
              },
              "fullDescription": {
                "text": "Creating a `SharedPreferences` object in a mode other than `MODE_PRIVATE`. Malicious applications can read or write this `SharedPreferences` object.\n"
              },
              "help": {
                "text": "Use mode `MODE_PRIVATE` to prevent other applications from reading or writing to this `SharedPreferences` object.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "sqli_unescaped_substitution_mybatis",
              "name": "Sigma Checker sqli_unescaped_substitution_mybatis",
              "shortDescription": {
                "text": "SQL unescaped substitution"
              },
              "fullDescription": {
                "text": "The use of the `${a string}` syntax is highly discouraged, as the unmodified string will be injected into the SQL query without escaping.\n"
              },
              "help": {
                "text": "Replace the `${a string}` syntax with the autoescaping `#{a string}` syntax, which is safer and also makes the execution faster. If using `${}` is unavoidable, disallow user input into these fields, check their values against a list of safe strings, or escape the values.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "ssh_publicly_accessible_cloudformation_eks",
              "name": "Sigma Checker ssh_publicly_accessible_cloudformation_eks",
              "shortDescription": {
                "text": "EKS cluster node group with SSH publicly accessible"
              },
              "fullDescription": {
                "text": "The Amazon EKS cluster node group exposes the SSH service to the public internet. Specifically, because`Properties.RemoteAccess.SourceSecurityGroups` is undefined, SSH traffic is allowed from `0.0.0.0/0`.\n"
              },
              "help": {
                "text": "Configure the `Properties.RemoteAccess.SourceSecurityGroups` field to restrict SSH access to approved security groups.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "ssrf_with_untrusted_callback_param_openapi",
              "name": "Sigma Checker ssrf_with_untrusted_callback_param_openapi",
              "shortDescription": {
                "text": "Server-side request forgery"
              },
              "fullDescription": {
                "text": "The API registers a callback based on untrusted client input in the parameter field. An attacker can manipulate the callback URI causing the API host to make requests to arbitrary servers.\n"
              },
              "help": {
                "text": "Audit the use of the server-side callback URI and restrict it to a list of trusted domains."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "ssrf_with_untrusted_callback_prop_openapi",
              "name": "Sigma Checker ssrf_with_untrusted_callback_prop_openapi",
              "shortDescription": {
                "text": "Server-side request forgery"
              },
              "fullDescription": {
                "text": "The API registers a callback based on untrusted client input in the `requestBody` property field. An attacker can manipulate the callback URI causing the API host to make requests to arbitrary servers.\n"
              },
              "help": {
                "text": "Audit the use of the server-side callback URI and restrict it to a list of trusted domains."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "state_changing_get_request_grails_springsecurity",
              "name": "Sigma Checker state_changing_get_request_grails_springsecurity",
              "shortDescription": {
                "text": "HTTP GET request can trigger logout"
              },
              "fullDescription": {
                "text": "The application can trigger a logout via an HTTP GET request.\n"
              },
              "help": {
                "text": "Make sure to set the `postOnly` attribute to `true` or use the default value.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "storage_versioning_disabled_cloudformation_aws_s3_bucket",
              "name": "Sigma Checker storage_versioning_disabled_cloudformation_aws_s3_bucket",
              "shortDescription": {
                "text": "AWS S3 Bucket versioning disabled"
              },
              "fullDescription": {
                "text": "The Amazon S3 Bucket does not have versioning enabled. Versioning creates multiple versions of all objects in the bucket to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions.\n"
              },
              "help": {
                "text": "Enable S3 Bucket versioning by explicitly setting the `Properties.VersioningConfiguration.Status` value to \"Enabled\".\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "storage_versioning_disabled_cloudformation_dynamo_db",
              "name": "Sigma Checker storage_versioning_disabled_cloudformation_dynamo_db",
              "shortDescription": {
                "text": "DynamoDB Point-in-Time Recovery disabled"
              },
              "fullDescription": {
                "text": "The Amazon DynamoDB Table does not have point-in-time recovery (PITR) enabled. As a result, there are no protections against accidental writes and deletes.\n"
              },
              "help": {
                "text": "Enable point-in-time recovery by explicitly setting the `PointInTimeRecoverySpecification.PointInTimeRecoveryEnabled` value to `true`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "stripe_validation_disabled_openapi_x_stripe",
              "name": "Sigma Checker stripe_validation_disabled_openapi_x_stripe",
              "shortDescription": {
                "text": "Stripe payment validation disabled"
              },
              "fullDescription": {
                "text": "Stripe object validation (type, size, etc.) is disabled. Disabling Stripe payment validation is intended for the Stripe mock server, but can be dangerous in production, allowing the server to accept unvalidated request objects.\n"
              },
              "help": {
                "text": "Enable object validation on the Stripe server by removing the `x-stripeBypassValidation` field or by setting the value to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "tag_authorization_disabled_spring_security",
              "name": "Sigma Checker tag_authorization_disabled_spring_security",
              "shortDescription": {
                "text": "Spring Security authorize JSP tags are disabled"
              },
              "fullDescription": {
                "text": "Spring Security authorize JSP tags are disabled. This disables view-based authorization checks, potentially disclosing content to unauthorized users.\n"
              },
              "help": {
                "text": "It is recommended to disable this feature by setting the property to `false`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "tiller_service_exposed_kubernetes",
              "name": "Sigma Checker tiller_service_exposed_kubernetes",
              "shortDescription": {
                "text": "Tiller service exposed"
              },
              "fullDescription": {
                "text": "Helm's `tiller` service, which has no default authentication mechanism, is listening on an external interface.\n"
              },
              "help": {
                "text": "Disable Helm's `tiller` service or bind to a local interface using the `--listen` argument with a `localhost` or `127.0.0.1` address."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "token_ttl_too_long_openapi_x_a127",
              "name": "Sigma Checker token_ttl_too_long_openapi_x_a127",
              "shortDescription": {
                "text": "OAuth2 token with excessive duration"
              },
              "fullDescription": {
                "text": "The OAuth2 access token has a duration that exceeds `60` minutes. Excessive access token duration increases the timeframe for which an attacker may use a compromised token.\n"
              },
              "help": {
                "text": "Configure the OAuth2 authorization server to generate access tokens that are short lived and not valid for more than `60` minutes. This is configured with a `x-a127-services.oauth2.options.tokenLifetime`  value no greater than `3600000`."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "undefined_oauth2_scope_openapi_v2",
              "name": "Sigma Checker undefined_oauth2_scope_openapi_v2",
              "shortDescription": {
                "text": "Undefined OAuth2 token scope"
              },
              "fullDescription": {
                "text": "An OAuth2 security scheme applied at the operation level uses a scope that has not been defined in the global security scheme definition. This allows for an undefined or ambiguous OAuth2 token scope which may cause the API authorization mechanism to behave unexpectedly.\n"
              },
              "help": {
                "text": "Only use defined scopes within OAuth2 security schemes. Any `scope` applied to a security scheme should be defined in the global `securityDefinitions`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "undefined_oauth2_scope_openapi_v3",
              "name": "Sigma Checker undefined_oauth2_scope_openapi_v3",
              "shortDescription": {
                "text": "Undefined OAuth2 token scope"
              },
              "fullDescription": {
                "text": "An OAuth2 security scheme applied at the operation level uses a scope that has not been defined in the global security scheme definition. This allows for an undefined or ambiguous OAuth2 token scope which may cause the API authorization mechanism to behave unexpectedly.\n"
              },
              "help": {
                "text": "Only use defined scopes within OAuth2 security schemes. Any `scope` applied to a security scheme should be defined in the global `securitySchemes`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unlimited_concurrent_sessions_spring_security",
              "name": "Sigma Checker unlimited_concurrent_sessions_spring_security",
              "shortDescription": {
                "text": "Unlimited concurrent sessions"
              },
              "fullDescription": {
                "text": "The maximum number of concurrent sessions is unlimited, which might allow an attacker to acquire and use a large number of server resources causing a denial of service on the server.\n"
              },
              "help": {
                "text": "Limit the maximum number of concurrent sessions by setting the argument `maximumSessions` to a reasonable number (or omit it, as the default value is `1`)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unprotected_admin_operation_openapi",
              "name": "Sigma Checker unprotected_admin_operation_openapi",
              "shortDescription": {
                "text": "Insufficient authorization for privileged operation"
              },
              "fullDescription": {
                "text": "The API exposes a privileged operation that is accessible by non-privileged scopes. A non-privileged user can access these privileged operations, resulting in a vertical privilege escalation.\n"
              },
              "help": {
                "text": "Privileged operations should require a token with a privileged scope. This is configured by modifying the list of scopes in the `security` field for a privileged operation. For example, `{\"/admin\":{\"get\":{\"summary\":\"Get admin data\",\"security\":[{\"OAuth2\":[\"admin\"]}]}}}`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unprotected_master_key_cloudformation_aws_kms",
              "name": "Sigma Checker unprotected_master_key_cloudformation_aws_kms",
              "shortDescription": {
                "text": "AWS KMS Insecure Key Policy"
              },
              "fullDescription": {
                "text": "The AWS Key Management Service (AWS KMS) has a key policy where the `Principal` is set to the wildcard `*`. As a result, the Customer Master Key (CMK) is accessible to all users.\n"
              },
              "help": {
                "text": "Set the `Principal` to a value other than the wildcard `*`. Access to the CMK  should be restricted to authorized key administrators."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_egress_cloudformation_aws_ec2",
              "name": "Sigma Checker unrestricted_egress_cloudformation_aws_ec2",
              "shortDescription": {
                "text": "EC2 Network ACL allows outbound traffic to any IP and port"
              },
              "fullDescription": {
                "text": "The EC2 Network ACL allows outbound traffic to any IP and port indicated by the `CidrIp` value `0.0.0.0/0` and the port range 0-65535 or the `Protocol` value `-1` (i.e. all protocols).\n"
              },
              "help": {
                "text": "Modify the `CidrBlock` to restrict inbound traffic to a specific IP range if the EC2 instance is not meant to be publicly accessible. Additionally, restrict the allowed ports and protocols to only those that are necessary.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unrestricted_egress_cloudformation_aws_ec2_security_group",
              "name": "Sigma Checker unrestricted_egress_cloudformation_aws_ec2_security_group",
              "shortDescription": {
                "text": "EC2 security group allows outbound traffic to any IP and port"
              },
              "fullDescription": {
                "text": "The EC2 security group allows outbound traffic to any IP and protocol indicated by the `CidrIp` value `0.0.0.0/0` and the port range `0-65535`.\n"
              },
              "help": {
                "text": "Modify the `CidrIp` to restrict outbound traffic to a specific IP range if the EC2 instance is not meant to be publicly accessible. Additionally, only allow outbound traffic from necessary ports via the `FromPort` and `ToPort` values.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unrestricted_egress_cloudformation_aws_ec2_security_group_default",
              "name": "Sigma Checker unrestricted_egress_cloudformation_aws_ec2_security_group_default",
              "shortDescription": {
                "text": "Default EC2 security group allows open access"
              },
              "fullDescription": {
                "text": "The default EC2 security group has undefined `SecurityGroupEgress` fields resulting in a default allow-all configuration.\n"
              },
              "help": {
                "text": "Configure the `SecurityGroupEgress` fields to restrict outbound network traffic."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_egress_istio",
              "name": "Sigma Checker unrestricted_egress_istio",
              "shortDescription": {
                "text": "Istio Services Unrestricted Egress"
              },
              "fullDescription": {
                "text": "The Istio outbound traffic policy allows unrestricted egress from downstream services, allowing an attacker to abuse a compromised service to exfiltrate data or pivot on the network.\n"
              },
              "help": {
                "text": "Explicitly set the `meshConfig.outboundTrafficPolicy.mode` to `REGISTRY_ONLY` to only allow outbound requests to services defined in the service registry or those defined through ServiceEntries.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "unrestricted_ingress_cloudformation_aws_ec2",
              "name": "Sigma Checker unrestricted_ingress_cloudformation_aws_ec2",
              "shortDescription": {
                "text": "EC2 Network ACL allows inbound traffic from any IP"
              },
              "fullDescription": {
                "text": "The EC2 Network ACL allows inbound traffic from any IP indicated by the `CidrIp` value `0.0.0.0/0`.\n"
              },
              "help": {
                "text": "Modify the `CidrBlock` to restrict inbound traffic to a specific IP range if the EC2 instance is not meant to be publicly accessible.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_cloudformation_aws_ec2_security_group",
              "name": "Sigma Checker unrestricted_ingress_cloudformation_aws_ec2_security_group",
              "shortDescription": {
                "text": "EC2 security group allows inbound traffic from any IP"
              },
              "fullDescription": {
                "text": "The EC2 security group allows inbound traffic from any IP indicated by the `CidrIp` value `0.0.0.0/0`.\n"
              },
              "help": {
                "text": "Modify the `CidrIp` to restrict inbound traffic to a specific IP range if the EC2 instance is not meant to be publicly accessible.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_cloudformation_aws_ec2_security_group_default",
              "name": "Sigma Checker unrestricted_ingress_cloudformation_aws_ec2_security_group_default",
              "shortDescription": {
                "text": "Default EC2 security group allows open access"
              },
              "fullDescription": {
                "text": "The default EC2 security group has undefined `SecurityGroupIngress` fields resulting in a default allow-all configuration.\n"
              },
              "help": {
                "text": "Configure the `SecurityGroupIngress` fields to restrict inbound network traffic."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_aws_eks",
              "name": "Sigma Checker unrestricted_ingress_terraform_aws_eks",
              "shortDescription": {
                "text": "AWS EKS API server unrestricted ingress"
              },
              "fullDescription": {
                "text": "The AWS EKS public API server is exposed, allowing external access to the resource from any IP range.\n"
              },
              "help": {
                "text": "Disable the public API server by removing the `vpc_config.endpoint_public_access` field or explicitly setting it to `false`. If the server must be publicly exposed, the authorized IP ranges should be restricted by setting the `public_access_cidrs` to a value other than `0.0.0.0/0`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_aws_security_group",
              "name": "Sigma Checker unrestricted_ingress_terraform_aws_security_group",
              "shortDescription": {
                "text": "AWS security group unrestricted ingress"
              },
              "fullDescription": {
                "text": "The AWS Security Group allows unrestricted ingress from any IP range, unnecessarily exposing the associated resources to all networks.\n"
              },
              "help": {
                "text": "Modify the AWS Security Group configuration so that the ingress `cidr_blocks` array does not include `0.0.0.0/0`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_azurerm_kubernetes_cluster",
              "name": "Sigma Checker unrestricted_ingress_terraform_azurerm_kubernetes_cluster",
              "shortDescription": {
                "text": "AKS API server unrestricted ingress"
              },
              "fullDescription": {
                "text": "The Azure Kubernetes Service (AKS) API server allows unrestricted ingress from any IP range, unnecessarily exposing the API server to all networks.\n"
              },
              "help": {
                "text": "Configure the `api_server_authorized_ip_ranges` field to restrict the list of IP ranges allowed to communicate with the API server."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_gke",
              "name": "Sigma Checker unrestricted_ingress_terraform_gke",
              "shortDescription": {
                "text": "GKE cluster unrestricted ingress"
              },
              "fullDescription": {
                "text": "The Google Kubernetes Engine (GKE) container cluster allows unrestricted ingress from any IP range, unnecessarily exposing the associated resources to all networks.\n"
              },
              "help": {
                "text": "Modify the GKE container cluster configuration so that the `master_authorized_networks_config.cidr_blocks.cidr_block` is set to a value other than `0.0.0.0/0`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_google_compute",
              "name": "Sigma Checker unrestricted_ingress_terraform_google_compute",
              "shortDescription": {
                "text": "Google firewall unrestricted ingress"
              },
              "fullDescription": {
                "text": "The Google Compute firewall allows unrestricted ingress from any IP range, unnecessarily exposing the associated ports and services to all networks.\n"
              },
              "help": {
                "text": "Modify the Google Compute firewall rule so that the `source_ranges` array does not include `0.0.0.0/0`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unrestricted_ingress_terraform_google_sql_db",
              "name": "Sigma Checker unrestricted_ingress_terraform_google_sql_db",
              "shortDescription": {
                "text": "Google database unrestricted ingress"
              },
              "fullDescription": {
                "text": "The Google Cloud SQL database instance allows unrestricted ingress from any IP range, unnecessarily exposing the database to all networks.\n"
              },
              "help": {
                "text": "Modify the Google Cloud SQL database configuration so that the `settings.ip_configuration.authorized_networks.value` is not `0.0.0.0/0`."
              },
              "defaultConfiguration": {
                "level": "error"
              }
            },
            {
              "id": "unsafe_authentication_filter_spring_security",
              "name": "Sigma Checker unsafe_authentication_filter_spring_security",
              "shortDescription": {
                "text": "Credentials exposed in GET requests"
              },
              "fullDescription": {
                "text": "The authentication filter allows credentials to be accepted in a GET request. Credentials sent in query strings may leak sensitive information to an attacker through proxy logs, browser history, or other means.\n"
              },
              "help": {
                "text": "Set the `postOnly` parameter to `true` (or omit it, as the default value is `true`) to prevent credentials leak in GET request."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unsafe_http_method_openapi",
              "name": "Sigma Checker unsafe_http_method_openapi",
              "shortDescription": {
                "text": "Operation supports unsafe HTTP method"
              },
              "fullDescription": {
                "text": "The API operation supports one or more unsafe HTTP methods, such as `DEBUG`, `TRACE`, `TRACK`, or `CONNECT`. These unsafe HTTP methods expose debugging functionality that may be abused by an attacker.\n"
              },
              "help": {
                "text": "Remove support for unsafe HTTP methods (`DEBUG`, `TRACE`, `TRACK`, or `CONNECT`)."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unsafe_innerhtml_manipulation_react",
              "name": "Sigma Checker unsafe_innerhtml_manipulation_react",
              "shortDescription": {
                "text": "Using dangerouslySetInnerHTML with dynamic data in React"
              },
              "fullDescription": {
                "text": "Setting raw HTML content without proper sanitization to the `innerHTML` property of a DOM element by using the `dangerouslySetInnerHTML` attribute may lead to cross-site scripting vulnerabilities.\n"
              },
              "help": {
                "text": "Audit the usage of `dangerouslySetInnerHTML` to make sure it is necessary and its content is properly sanitized.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unsafe_innerhtml_manipulation_vue",
              "name": "Sigma Checker unsafe_innerhtml_manipulation_vue",
              "shortDescription": {
                "text": "Use of unsafe domPropsInnerHTML"
              },
              "fullDescription": {
                "text": "The use of `domPropsInnerHTML` does not HTML escape the contents, allowing for XSS.\n"
              },
              "help": {
                "text": "Make sure the HTML contents are trusted and not user-controllable.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unsafe_min_sdk_version_android",
              "name": "Sigma Checker unsafe_min_sdk_version_android",
              "shortDescription": {
                "text": "Android application supports unsafe SDK versions"
              },
              "fullDescription": {
                "text": "The application supports unsafe Android versions as the `android:minSdkVersion` value is known to be unsafe. Allowing your application to execute on old Android versions is unsafe, as other applications may exploit operating system weaknesses and perform a variety of attacks to your application.\n"
              },
              "help": {
                "text": "Use a known safe `minSdkVersion`, such as 22.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "unsafe_vhtml_directive_template_file_vue",
              "name": "Sigma Checker unsafe_vhtml_directive_template_file_vue",
              "shortDescription": {
                "text": "Outputting HTML unsafely through v-html"
              },
              "fullDescription": {
                "text": "The `v-html` directive outputs raw HTML, which is not sanitized in any form which the browser will interpret verbatim. If untrusted data is assigned to this directive, it will result in cross-site scripting.\n"
              },
              "help": {
                "text": "To safely output the values as text, use the double curly braces instead of `v-html`. If outputting HTML is necessary, sanitize the HTML values using the DOMPurify library to output a safe subset of HTML.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "vendor_provided_encryption_key_cloudformation_cloudtrail",
              "name": "Sigma Checker vendor_provided_encryption_key_cloudformation_cloudtrail",
              "shortDescription": {
                "text": "Amazon CloudTrail uses S3 managed encryption key"
              },
              "fullDescription": {
                "text": "The Amazon CloudTrail service is configured to encrypt log data using Amazon S3-managed encryption keys (SSE-S3) instead of using Amazon KMS–managed keys (SSE-KMS) protected by a customer master key (CMK).\n"
              },
              "help": {
                "text": "Set the `Properties.KMSKeyId` field to configure encryption of Amazon CloudTrail logs using a KMS-managed key protected by a customer master key to prevent unauthorized access to the encryption key and exposure of log data.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "vendor_provided_encryption_key_cloudformation_efs",
              "name": "Sigma Checker vendor_provided_encryption_key_cloudformation_efs",
              "shortDescription": {
                "text": "Amazon Elastic File System uses S3 managed encryption key"
              },
              "fullDescription": {
                "text": "The Amazon Elastic File System (EFS) is encrypted with an Amazon S3-managed encryption key (SSE-S3) instead of an Amazon KMS–managed key (SSE-KMS) protected by a customer master key (CMK).\n"
              },
              "help": {
                "text": "Set the `Properties.KmsKeyId` field to encrypt the file system using a KMS-managed key protected by a customer master key to prevent unauthorized access to file system data.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "vendor_provided_encryption_key_terraform_google_compute",
              "name": "Sigma Checker vendor_provided_encryption_key_terraform_google_compute",
              "shortDescription": {
                "text": "Missing customer-supplied encryption key"
              },
              "fullDescription": {
                "text": "The Google Compute instance uses a Google-provided encryption key rather than a customer-controlled key.\n"
              },
              "help": {
                "text": "Configure a customer-controlled encryption key when defining the `google_compute_instance` or `google_compute_disk` resources."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "verbose_error_message_spring_boot",
              "name": "Sigma Checker verbose_error_message_spring_boot",
              "shortDescription": {
                "text": "Spring Boot displaying exception information"
              },
              "fullDescription": {
                "text": "The Spring Boot application is configured to allow exception information to be displayed in an error page which may assist attackers in gaining unauthorized access to the system.\n"
              },
              "help": {
                "text": "In production, set the `include-exception` property to `false` or use the default value.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "verbose_server_banner_express",
              "name": "Sigma Checker verbose_server_banner_express",
              "shortDescription": {
                "text": "Sending X-Powered-By header"
              },
              "fullDescription": {
                "text": "HTTP responses contain an `X-Powered-By` header that reveals information about the server which helps attackers exploit known vulnerabilities or craft more targeted exploits\n"
              },
              "help": {
                "text": "Use `app.disable('x-powered-by')` to disable the `X-Powered-By` header. If you're using an older version of Express that does not support this setting and you can't upgrade, create a middleware to call `res.removeHeader(\"x-powered-by\")` where `res` is the response object.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "waf_disabled_terraform_aws_cloudfront",
              "name": "Sigma Checker waf_disabled_terraform_aws_cloudfront",
              "shortDescription": {
                "text": "AWS WAF not enabled"
              },
              "fullDescription": {
                "text": "The AWS CloudFront Distribution web application firewall (WAF) is not enabled.\n"
              },
              "help": {
                "text": "Enable the AWS WAF by setting the `web_acl_id` value to the ID of the WAF associated with the distribution."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "weak_password_hash_grails_springsecurity",
              "name": "Sigma Checker weak_password_hash_grails_springsecurity",
              "shortDescription": {
                "text": "Weak password hash algorithm"
              },
              "fullDescription": {
                "text": "The current password hash algorithm is not secure enough.\n"
              },
              "help": {
                "text": "Make sure to use either `bcrypt` (the default) or `pbkdf2`.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "weak_password_hash_spring_security_code",
              "name": "Sigma Checker weak_password_hash_spring_security_code",
              "shortDescription": {
                "text": "Weak password hashing algorithm used"
              },
              "fullDescription": {
                "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n"
              },
              "help": {
                "text": "Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "weak_password_hash_spring_security_config",
              "name": "Sigma Checker weak_password_hash_spring_security_config",
              "shortDescription": {
                "text": "Weak password hashing algorithm"
              },
              "fullDescription": {
                "text": "Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n"
              },
              "help": {
                "text": "Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "weak_password_policy_terraform_auth0",
              "name": "Sigma Checker weak_password_policy_terraform_auth0",
              "shortDescription": {
                "text": "Auth0 Weak Password Policy"
              },
              "fullDescription": {
                "text": "The Auth0 database connection resource has a weak password policy indicated by an `options.password_policy` field with the value `None`, `Low`, or `Fair`.\n"
              },
              "help": {
                "text": "Set the `options.password_policy` field to the value `Good` or `Excellent` to enforce adequate password complexity."
              },
              "defaultConfiguration": {
                "level": "warning"
              }
            },
            {
              "id": "weak_password_policy_terraform_aws_iam",
              "name": "Sigma Checker weak_password_policy_terraform_aws_iam",
              "shortDescription": {
                "text": "Weak AWS IAM Password Policy"
              },
              "fullDescription": {
                "text": "The AWS IAM password lacks sufficient complexity, exposing user credentials to password guessing attacks.\n"
              },
              "help": {
                "text": "Modify the `aws_iam_account_password_policy` resource to enforce password rules regarding length, complexity, history, and age."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "weak_security_constraint_servlet",
              "name": "Sigma Checker weak_security_constraint_servlet",
              "shortDescription": {
                "text": "Weak security constraint"
              },
              "fullDescription": {
                "text": "Security constraints do not provide sufficient protection for critical resources. These constraints either do not configure authentication properly (allowing unauthenticated access), or configure resources to allow access to all roles indicate that the application's web resources do not have sufficient authorization controls.\n"
              },
              "help": {
                "text": "Add sufficient access control configuration for the security constraint using authorization constraints, roles, or permissions.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "webview_file_access_android",
              "name": "Sigma Checker webview_file_access_android",
              "shortDescription": {
                "text": "Same Origin Policy bypass through accessing local files"
              },
              "fullDescription": {
                "text": "Allowing a WebView to access files on the local file system creates a security risk if the WebView is loaded from an untrusted source or its content can be manipulated. If an attacker can control the contents of the WebView, then the WebView may be tricked into loading a malicious local file that can access sensitive files on the device without origin restrictions.\n"
              },
              "help": {
                "text": "Disallow WebViews from accessing files on the device by changing the setting to `false`. Note, that in recent Android versions the default value for this API is `false`, which is secure. Only change this default setting if there is an explicit and well understood reason to do so, for example, loading files packaged with the application."
              },
              "defaultConfiguration": {
                "level": "note"
              }
            },
            {
              "id": "api_test_checker_2",
              "name": "Sigma Checker api_test_checker_2",
              "shortDescription": {
                "text": "Test API checker"
              },
              "fullDescription": {
                "text": "A checker to test the API checker infrastructure\n"
              },
              "help": {
                "text": "None"
              },
              "defaultConfiguration": {
                "level": "note"
              }
            }
          ],
          "version": "2021.6.0"
        }
      },
      "results": [
        {
          "guid": "171228ca-3b80-5334-a9d3-2261a12bf290",
          "ruleId": "container_missing_memory_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing memory limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "171228ca-3b80-5334-a9d3-2261a12bf290"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 257,
                  "endLine": 257,
                  "startColumn": 46,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "guid": "1cb87347-7b1f-5ba5-9e73-7b381e8fd5fb",
          "ruleId": "container_empty_security_context_kubernetes",
          "level": "note",
          "message": {
            "text": "Container security context disabled"
          },
          "partialFingerprints": {
            "defectUuid/v1": "1cb87347-7b1f-5ba5-9e73-7b381e8fd5fb"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 315,
                  "endLine": 315,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "1ff1f195-003b-5d76-85b8-96726ec39e16",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "1ff1f195-003b-5d76-85b8-96726ec39e16"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 186,
                  "endLine": 298,
                  "startColumn": 21,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "guid": "28d356e1-f8cc-58c6-a7d1-0006834ae2db",
          "ruleId": "custom_resource_in_default_namespace_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes resource uses the default namespace"
          },
          "partialFingerprints": {
            "defectUuid/v1": "28d356e1-f8cc-58c6-a7d1-0006834ae2db"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 11,
                  "startColumn": 17,
                  "endColumn": 6
                }
              }
            }
          ]
        },
        {
          "guid": "28e78708-2299-5e45-abd0-20b5e2531e2a",
          "ruleId": "container_missing_memory_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing memory limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "28e78708-2299-5e45-abd0-20b5e2531e2a"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 277,
                  "startColumn": 46,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "guid": "2af70035-95b0-5a64-8c30-f380fd3da5a2",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "2af70035-95b0-5a64-8c30-f380fd3da5a2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/views/banners/LegacyBanner.tsx"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 53,
                  "endColumn": 57
                }
              }
            }
          ]
        },
        {
          "guid": "32bb83c3-57d8-5355-91f5-5082d53bdfaa",
          "ruleId": "custom_resource_in_default_namespace_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes resource uses the default namespace"
          },
          "partialFingerprints": {
            "defectUuid/v1": "32bb83c3-57d8-5355-91f5-5082d53bdfaa"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 11,
                  "startColumn": 17,
                  "endColumn": 6
                }
              }
            }
          ]
        },
        {
          "guid": "35a1cb1d-e759-5433-9391-62d4e29a8995",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "35a1cb1d-e759-5433-9391-62d4e29a8995"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 136,
                  "startColumn": 52,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "guid": "4307198f-e513-563d-8c65-4583abfb0b91",
          "ruleId": "container_missing_cpu_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing CPU limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "4307198f-e513-563d-8c65-4583abfb0b91"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 109,
                  "startColumn": 47,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "guid": "49cf3dd9-8012-5141-89ee-8e769dd0c157",
          "ruleId": "container_empty_security_context_kubernetes",
          "level": "note",
          "message": {
            "text": "Container security context disabled"
          },
          "partialFingerprints": {
            "defectUuid/v1": "49cf3dd9-8012-5141-89ee-8e769dd0c157"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 295,
                  "endLine": 295,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "4dc5eef0-7116-5ce8-a5dc-c654313efe43",
          "ruleId": "container_missing_cpu_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing CPU limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "4dc5eef0-7116-5ce8-a5dc-c654313efe43"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 257,
                  "endLine": 257,
                  "startColumn": 46,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "guid": "5a6f06a6-54dd-58df-96fc-2f320b07a804",
          "ruleId": "verbose_server_banner_express",
          "level": "note",
          "message": {
            "text": "Sending X-Powered-By header"
          },
          "partialFingerprints": {
            "defectUuid/v1": "5a6f06a6-54dd-58df-96fc-2f320b07a804"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ee/server/services/ecdh-proxy/lib/server.ts"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 13,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "guid": "63cf49c9-7a3a-54a5-82e6-b342d5ed01af",
          "ruleId": "container_empty_security_context_kubernetes",
          "level": "note",
          "message": {
            "text": "Container security context disabled"
          },
          "partialFingerprints": {
            "defectUuid/v1": "63cf49c9-7a3a-54a5-82e6-b342d5ed01af"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "664f5338-3af3-5d3f-99c5-d6bc004b2a52",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "664f5338-3af3-5d3f-99c5-d6bc004b2a52"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 315,
                  "endLine": 315,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "68c2c68e-a94a-5d3f-9849-ed1c4045180e",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "68c2c68e-a94a-5d3f-9849-ed1c4045180e"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/e2e/client/SaveE2EPasswordModal.tsx"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 44,
                  "endColumn": 62
                }
              }
            }
          ]
        },
        {
          "guid": "6a06ddb7-753c-5710-ba34-d6d77f59ea78",
          "ruleId": "container_missing_cpu_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing CPU limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "6a06ddb7-753c-5710-ba34-d6d77f59ea78"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 98,
                  "startColumn": 47,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "guid": "6a8ed03c-1ea1-52e8-9273-9e3a6ae75966",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "6a8ed03c-1ea1-52e8-9273-9e3a6ae75966"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "72573b40-c1a4-55d7-ac71-eda0393839e6",
          "ruleId": "container_filesystem_write_kubernetes",
          "level": "note",
          "message": {
            "text": "Container allows filesystem write"
          },
          "partialFingerprints": {
            "defectUuid/v1": "72573b40-c1a4-55d7-ac71-eda0393839e6"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 136,
                  "startColumn": 52,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "guid": "83a02717-10f6-5ecc-a018-2b44659a3f65",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "83a02717-10f6-5ecc-a018-2b44659a3f65"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 164,
                  "startColumn": 21,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "guid": "89b1647c-1c38-53bb-b4bf-5c44f666860a",
          "ruleId": "container_missing_cpu_limit_kubernetes",
          "level": "note",
          "message": {
            "text": "Kubernetes container missing CPU limit"
          },
          "partialFingerprints": {
            "defectUuid/v1": "89b1647c-1c38-53bb-b4bf-5c44f666860a"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 277,
                  "startColumn": 46,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "guid": "8c36e3b4-3937-5755-8b72-b0ff6b675461",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "8c36e3b4-3937-5755-8b72-b0ff6b675461"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/views/admin/apps/LogEntry.tsx"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 26,
                  "startColumn": 16,
                  "endColumn": 73
                }
              }
            }
          ]
        },
        {
          "guid": "8e34e59d-bdbb-5988-b8bf-5f74f4959c7d",
          "ruleId": "container_filesystem_write_kubernetes",
          "level": "note",
          "message": {
            "text": "Container allows filesystem write"
          },
          "partialFingerprints": {
            "defectUuid/v1": "8e34e59d-bdbb-5988-b8bf-5f74f4959c7d"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 147,
                  "startColumn": 52,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "guid": "954e91bd-3224-5fde-a6c4-2424c5730998",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "954e91bd-3224-5fde-a6c4-2424c5730998"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/e2e/client/EnterE2EPasswordModal.tsx"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 44,
                  "endColumn": 74
                }
              }
            }
          ]
        },
        {
          "guid": "9e3d6829-7fba-5524-a14b-55dc13eccd94",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "9e3d6829-7fba-5524-a14b-55dc13eccd94"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/components/UrlChangeModal.tsx"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 40,
                  "endColumn": 92
                }
              }
            }
          ]
        },
        {
          "guid": "a5fff8dc-88bb-5e9d-9e25-9fa6bf64ea33",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "a5fff8dc-88bb-5e9d-9e25-9fa6bf64ea33"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "ad4f9ed4-4083-5b89-83fa-1210f3d4a628",
          "ruleId": "container_empty_security_context_kubernetes",
          "level": "note",
          "message": {
            "text": "Container security context disabled"
          },
          "partialFingerprints": {
            "defectUuid/v1": "ad4f9ed4-4083-5b89-83fa-1210f3d4a628"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "ad9b0ee3-df6e-5172-84ab-10f1acbfce90",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "ad9b0ee3-df6e-5172-84ab-10f1acbfce90"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 145,
                  "startColumn": 21,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "guid": "b1c7858c-ff89-57fe-b89d-c0ae7722b571",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "b1c7858c-ff89-57fe-b89d-c0ae7722b571"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".storybook/decorators.tsx"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 43,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "guid": "b5c63e28-1ee0-553b-bf91-20b1249907e8",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "b5c63e28-1ee0-553b-bf91-20b1249907e8"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 295,
                  "endLine": 295,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "c117fe60-319c-5830-92cb-be016d9a62dd",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "c117fe60-319c-5830-92cb-be016d9a62dd"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "client/components/UrlChangeModal.tsx"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 39,
                  "startColumn": 14,
                  "endColumn": 7
                }
              }
            }
          ]
        },
        {
          "guid": "c4e92308-05ab-5483-816c-dd3d887e9bab",
          "ruleId": "container_running_as_root_kubernetes",
          "level": "error",
          "message": {
            "text": "Kubernetes container running as root"
          },
          "partialFingerprints": {
            "defectUuid/v1": "c4e92308-05ab-5483-816c-dd3d887e9bab"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 318,
                  "startColumn": 21,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "guid": "db1f750a-2528-5762-a644-6f0548f3aeff",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "db1f750a-2528-5762-a644-6f0548f3aeff"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-ephemeral.json"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "e489c87d-dcfa-505f-8cf7-f9852fdccc29",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "e489c87d-dcfa-505f-8cf7-f9852fdccc29"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161,
                  "startColumn": 44,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "guid": "e4e203d8-aacf-59c2-bedb-13cc5abb0fd1",
          "ruleId": "container_privilege_escalation_allowed_kubernetes",
          "level": "warning",
          "message": {
            "text": "Kubernetes container privilege escalation allowed"
          },
          "partialFingerprints": {
            "defectUuid/v1": "e4e203d8-aacf-59c2-bedb-13cc5abb0fd1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".openshift/rocket-chat-persistent.json"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 147,
                  "startColumn": 52,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "guid": "f9aa9dfe-ef71-5c5d-9204-9eae92815e4d",
          "ruleId": "unsafe_innerhtml_manipulation_react",
          "level": "note",
          "message": {
            "text": "Using dangerouslySetInnerHTML with dynamic data in React"
          },
          "partialFingerprints": {
            "defectUuid/v1": "f9aa9dfe-ef71-5c5d-9204-9eae92815e4d"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/threads/client/components/ThreadView.tsx"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 59,
                  "endColumn": 64
                }
              }
            }
          ]
        }
      ]
    }
  ]
}